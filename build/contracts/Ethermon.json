{
  "contractName": "Ethermon",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "gameOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "monsters",
      "outputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "level",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_attackingMonster",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_defendingMonster",
          "type": "uint256"
        }
      ],
      "name": "battle",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        }
      ],
      "name": "createNewMonster",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_attackingMonster\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_defendingMonster\",\"type\":\"uint256\"}],\"name\":\"battle\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"createNewMonster\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"gameOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"monsters\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"level\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Users/umutyerli/blockchain/ethermon/contracts/Ethermon.sol\":\"Ethermon\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/umutyerli/blockchain/ethermon/contracts/Ethermon.sol\":{\"keccak256\":\"0xc99f9da099413f1e518910d003a679610e4c53c2a7dee7aa0bd4c1b532734148\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://81d763aae70be0185ddfca1c7397ee206c451545fde4b68743b391faca2b1c48\",\"dweb:/ipfs/QmYKxo3E4ECNj8FceC6FrEXhj3KprN4AsVkUX4YwUb4pko\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x2d9f9af8b84d252e0e7ee716e4cb3ad1b58f3ec6619e4f54f40d4b5e28f75eb7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://43d6abdcb4cd5be9933f526b53f21008e9a7ab75ce134478625cc8ccd3c1a638\",\"dweb:/ipfs/QmZrzWUYmNANRCvHaMGsJQXYnWCe6HvMmvrqaPn1GEcpJ1\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xc1c941ad1e580b4623007305921efe2f26fc7320a4edc226234dd707c658a428\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://473e11d739868e0d9f48254ccf84ba63290d6a2321d59a37b74c244a27f9cad7\",\"dweb:/ipfs/QmUGzDmecP936jzgM7SYyGwR1YgBGsveoHHJTbDfB8jbGF\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x96877bb2eb8ca360e949ee1bd77b47a14e92e42f79897c350f088f87a3c231d4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://48593d699a4ef6b5bd2efb20d37320e69303fd27d4b59a2b6b8a8e563e608456\",\"dweb:/ipfs/QmdAPS8uLrzPJEeFZyJVkwTtaL3KB9jo9wJm1UcoJP55wT\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0xb8d11e77eb1ed34a33720edb551d7d6a6b0eee2bfaa40a7024020e1fdf879b16\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c583283c838cc624a96a69eaa823fa92ac5294ec88d417e266c09ea091e0ae62\",\"dweb:/ipfs/QmNdzitXaFADaxooWpB4WsckkDyr4j6GQRxBjyKXsvEeXv\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x069b2631bb5b5193a58ccf7a06266c7361bd2c20095667af4402817605627f45\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a4c96fafff76deda5697c3c5c98cade6e6e1b178254544c106bf360c079ce4e\",\"dweb:/ipfs/QmXmxubE3jnatFgZuN8ay1VV6hZ8WRmhvUjNpeVjki15HX\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xf930d2df426bfcfc1f7415be724f04081c96f4fb9ec8d0e3a521c07692dface0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc2bfdea0d2562c76fb3c4cf70a86c6ba25c5a30e8f8515c95aafdf8383f8395\",\"dweb:/ipfs/QmTbFya18786ckJfLYUoWau9jBTKfmWnWm5XSViWvB7PXN\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x456e9b3a2bfe189b5249857f624f4139e59331db518483b456c4e587a20552e0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1123c9545decc48a011370ebab4bf53dda98524fa21f9498e68851ba8f0ffc0f\",\"dweb:/ipfs/QmUpgMg8EFDnv87ePKUjXxXpJT3qwHRj9VDNSnRxu7T9sy\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x5718c5df9bd67ac68a796961df938821bb5dc0cd4c6118d77e9145afb187409b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d10e1d9b26042424789246603906ad06143bf9a928f4e99de8b5e3bdc662f549\",\"dweb:/ipfs/Qmejonoaj5MLekPus229rJQHcC6E9dz2xorjHJR84fMfmn\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0xa28007762d9da9db878dd421960c8cb9a10471f47ab5c1b3309bfe48e9e79ff4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://796ab6e88af7bf0e78def0f059310c903af6a312b565344e0ff524a0f26e81c6\",\"dweb:/ipfs/QmcsVgLgzWdor3UnAztUkXKNGcysm1MPneWksF72AvnwBx\"]}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b506040518060400160405280600881526020017f45746865726d6f6e0000000000000000000000000000000000000000000000008152506040518060400160405280600481526020017f454d4f4e00000000000000000000000000000000000000000000000000000000815250816000908051906020019062000096929190620000f9565b508060019080519060200190620000af929190620000f9565b50505033600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506200020e565b8280546200010790620001a9565b90600052602060002090601f0160209004810192826200012b576000855562000177565b82601f106200014657805160ff191683800117855562000177565b8280016001018555821562000177579182015b828111156200017657825182559160200191906001019062000159565b5b5090506200018691906200018a565b5090565b5b80821115620001a55760008160009055506001016200018b565b5090565b60006002820490506001821680620001c257607f821691505b60208210811415620001d957620001d8620001df565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b612c52806200021e6000396000f3fe608060405234801561001057600080fd5b506004361061010b5760003560e01c80636352211e116100a2578063b88d4fde11610071578063b88d4fde146102b4578063c0576b73146102d0578063c87b56dd14610301578063e985e9c514610331578063f6b12f28146103615761010b565b80636352211e1461021a57806370a082311461024a57806395d89b411461027a578063a22cb465146102985761010b565b8063115dd1ab116100de578063115dd1ab146101aa57806323b872dd146101c65780632a0c5221146101e257806342842e0e146101fe5761010b565b806301ffc9a71461011057806306fdde0314610140578063081812fc1461015e578063095ea7b31461018e575b600080fd5b61012a60048036038101906101259190611dac565b61037f565b604051610137919061259a565b60405180910390f35b610148610461565b60405161015591906125b5565b60405180910390f35b61017860048036038101906101739190611e52565b6104f3565b6040516101859190612533565b60405180910390f35b6101a860048036038101906101a39190611d70565b610578565b005b6101c460048036038101906101bf9190611dfe565b610690565b005b6101e060048036038101906101db9190611c6a565b6107a3565b005b6101fc60048036038101906101f79190611e7b565b610803565b005b61021860048036038101906102139190611c6a565b610926565b005b610234600480360381019061022f9190611e52565b610946565b6040516102419190612533565b60405180910390f35b610264600480360381019061025f9190611c05565b6109f8565b60405161027191906127e7565b60405180910390f35b610282610ab0565b60405161028f91906125b5565b60405180910390f35b6102b260048036038101906102ad9190611d34565b610b42565b005b6102ce60048036038101906102c99190611cb9565b610cc3565b005b6102ea60048036038101906102e59190611e52565b610d25565b6040516102f89291906125d7565b60405180910390f35b61031b60048036038101906103169190611e52565b610de1565b60405161032891906125b5565b60405180910390f35b61034b60048036038101906103469190611c2e565b610e88565b604051610358919061259a565b60405180910390f35b610369610f1c565b6040516103769190612533565b60405180910390f35b60007f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061044a57507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b8061045a575061045982610f42565b5b9050919050565b60606000805461047090612a47565b80601f016020809104026020016040519081016040528092919081815260200182805461049c90612a47565b80156104e95780601f106104be576101008083540402835291602001916104e9565b820191906000526020600020905b8154815290600101906020018083116104cc57829003601f168201915b5050505050905090565b60006104fe82610fac565b61053d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161053490612747565b60405180910390fd5b6004600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600061058382610946565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156105f4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105eb906127a7565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16610613611018565b73ffffffffffffffffffffffffffffffffffffffff16148061064257506106418161063c611018565b610e88565b5b610681576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610678906126c7565b60405180910390fd5b61068b8383611020565b505050565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610720576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161071790612647565b60405180910390fd5b6000600680549050905060066040518060400160405280858152602001600181525090806001815401808255809150506001900390600052602060002090600202016000909190919091506000820151816000019080519060200190610787929190611a29565b5060208201518160010155505061079e82826110d9565b505050565b6107b46107ae611018565b826110f7565b6107f3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107ea906127c7565b60405180910390fd5b6107fe8383836111d5565b505050565b60006006838154811061083f577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000209060020201905060006006838154811061088b577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000209060020201905080600101548260010154106108e75760028260010160008282546108bf91906128d6565b9250508190555060018160010160008282546108db91906128d6565b92505081905550610920565b60018260010160008282546108fc91906128d6565b92505081905550600282600101600082825461091891906128d6565b925050819055505b50505050565b61094183838360405180602001604052806000815250610cc3565b505050565b6000806002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156109ef576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109e690612707565b60405180910390fd5b80915050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610a69576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a60906126e7565b60405180910390fd5b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b606060018054610abf90612a47565b80601f0160208091040260200160405190810160405280929190818152602001828054610aeb90612a47565b8015610b385780601f10610b0d57610100808354040283529160200191610b38565b820191906000526020600020905b815481529060010190602001808311610b1b57829003601f168201915b5050505050905090565b610b4a611018565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610bb8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610baf90612687565b60405180910390fd5b8060056000610bc5611018565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff16610c72611018565b73ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610cb7919061259a565b60405180910390a35050565b610cd4610cce611018565b836110f7565b610d13576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d0a906127c7565b60405180910390fd5b610d1f84848484611431565b50505050565b60068181548110610d3557600080fd5b9060005260206000209060020201600091509050806000018054610d5890612a47565b80601f0160208091040260200160405190810160405280929190818152602001828054610d8490612a47565b8015610dd15780601f10610da657610100808354040283529160200191610dd1565b820191906000526020600020905b815481529060010190602001808311610db457829003601f168201915b5050505050908060010154905082565b6060610dec82610fac565b610e2b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e2290612787565b60405180910390fd5b6000610e3561148d565b90506000815111610e555760405180602001604052806000815250610e80565b80610e5f846114a4565b604051602001610e7092919061250f565b6040516020818303038152906040525b915050919050565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b60008073ffffffffffffffffffffffffffffffffffffffff166002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614159050919050565b600033905090565b816004600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff1661109383610946565b73ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6110f3828260405180602001604052806000815250611651565b5050565b600061110282610fac565b611141576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611138906126a7565b60405180910390fd5b600061114c83610946565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614806111bb57508373ffffffffffffffffffffffffffffffffffffffff166111a3846104f3565b73ffffffffffffffffffffffffffffffffffffffff16145b806111cc57506111cb8185610e88565b5b91505092915050565b8273ffffffffffffffffffffffffffffffffffffffff166111f582610946565b73ffffffffffffffffffffffffffffffffffffffff161461124b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161124290612767565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156112bb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112b290612667565b60405180910390fd5b6112c68383836116ac565b6112d1600082611020565b6001600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254611321919061295d565b925050819055506001600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461137891906128d6565b92505081905550816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b61143c8484846111d5565b611448848484846116b1565b611487576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161147e90612607565b60405180910390fd5b50505050565b606060405180602001604052806000815250905090565b606060008214156114ec576040518060400160405280600181526020017f3000000000000000000000000000000000000000000000000000000000000000815250905061164c565b600082905060005b6000821461151e57808061150790612a79565b915050600a82611517919061292c565b91506114f4565b60008167ffffffffffffffff811115611560577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040519080825280601f01601f1916602001820160405280156115925781602001600182028036833780820191505090505b5090505b60008514611645576001826115ab919061295d565b9150600a856115ba9190612ac2565b60306115c691906128d6565b60f81b818381518110611602577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600a8561163e919061292c565b9450611596565b8093505050505b919050565b61165b8383611848565b61166860008484846116b1565b6116a7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161169e90612607565b60405180910390fd5b505050565b505050565b60006116d28473ffffffffffffffffffffffffffffffffffffffff16611a16565b1561183b578373ffffffffffffffffffffffffffffffffffffffff1663150b7a026116fb611018565b8786866040518563ffffffff1660e01b815260040161171d949392919061254e565b602060405180830381600087803b15801561173757600080fd5b505af192505050801561176857506040513d601f19601f820116820180604052508101906117659190611dd5565b60015b6117eb573d8060008114611798576040519150601f19603f3d011682016040523d82523d6000602084013e61179d565b606091505b506000815114156117e3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016117da90612607565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614915050611840565b600190505b949350505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156118b8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016118af90612727565b60405180910390fd5b6118c181610fac565b15611901576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016118f890612627565b60405180910390fd5b61190d600083836116ac565b6001600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461195d91906128d6565b92505081905550816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45050565b600080823b905060008111915050919050565b828054611a3590612a47565b90600052602060002090601f016020900481019282611a575760008555611a9e565b82601f10611a7057805160ff1916838001178555611a9e565b82800160010185558215611a9e579182015b82811115611a9d578251825591602001919060010190611a82565b5b509050611aab9190611aaf565b5090565b5b80821115611ac8576000816000905550600101611ab0565b5090565b6000611adf611ada84612833565b612802565b905082815260208101848484011115611af757600080fd5b611b02848285612a05565b509392505050565b6000611b1d611b1884612863565b612802565b905082815260208101848484011115611b3557600080fd5b611b40848285612a05565b509392505050565b600081359050611b5781612bc0565b92915050565b600081359050611b6c81612bd7565b92915050565b600081359050611b8181612bee565b92915050565b600081519050611b9681612bee565b92915050565b600082601f830112611bad57600080fd5b8135611bbd848260208601611acc565b91505092915050565b600082601f830112611bd757600080fd5b8135611be7848260208601611b0a565b91505092915050565b600081359050611bff81612c05565b92915050565b600060208284031215611c1757600080fd5b6000611c2584828501611b48565b91505092915050565b60008060408385031215611c4157600080fd5b6000611c4f85828601611b48565b9250506020611c6085828601611b48565b9150509250929050565b600080600060608486031215611c7f57600080fd5b6000611c8d86828701611b48565b9350506020611c9e86828701611b48565b9250506040611caf86828701611bf0565b9150509250925092565b60008060008060808587031215611ccf57600080fd5b6000611cdd87828801611b48565b9450506020611cee87828801611b48565b9350506040611cff87828801611bf0565b925050606085013567ffffffffffffffff811115611d1c57600080fd5b611d2887828801611b9c565b91505092959194509250565b60008060408385031215611d4757600080fd5b6000611d5585828601611b48565b9250506020611d6685828601611b5d565b9150509250929050565b60008060408385031215611d8357600080fd5b6000611d9185828601611b48565b9250506020611da285828601611bf0565b9150509250929050565b600060208284031215611dbe57600080fd5b6000611dcc84828501611b72565b91505092915050565b600060208284031215611de757600080fd5b6000611df584828501611b87565b91505092915050565b60008060408385031215611e1157600080fd5b600083013567ffffffffffffffff811115611e2b57600080fd5b611e3785828601611bc6565b9250506020611e4885828601611b48565b9150509250929050565b600060208284031215611e6457600080fd5b6000611e7284828501611bf0565b91505092915050565b60008060408385031215611e8e57600080fd5b6000611e9c85828601611bf0565b9250506020611ead85828601611bf0565b9150509250929050565b611ec081612991565b82525050565b611ecf816129a3565b82525050565b6000611ee082612893565b611eea81856128a9565b9350611efa818560208601612a14565b611f0381612baf565b840191505092915050565b6000611f198261289e565b611f2381856128ba565b9350611f33818560208601612a14565b611f3c81612baf565b840191505092915050565b6000611f528261289e565b611f5c81856128cb565b9350611f6c818560208601612a14565b80840191505092915050565b6000611f856032836128ba565b91507f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560008301527f63656976657220696d706c656d656e74657200000000000000000000000000006020830152604082019050919050565b6000611feb601c836128ba565b91507f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006000830152602082019050919050565b600061202b6027836128ba565b91507f4f6e6c792067616d65206f776e65722063616e20637265617465206e6577206d60008301527f6f6e7374657273000000000000000000000000000000000000000000000000006020830152604082019050919050565b60006120916024836128ba565b91507f4552433732313a207472616e7366657220746f20746865207a65726f2061646460008301527f72657373000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b60006120f76019836128ba565b91507f4552433732313a20617070726f766520746f2063616c6c6572000000000000006000830152602082019050919050565b6000612137602c836128ba565b91507f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860008301527f697374656e7420746f6b656e00000000000000000000000000000000000000006020830152604082019050919050565b600061219d6038836128ba565b91507f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760008301527f6e6572206e6f7220617070726f76656420666f7220616c6c00000000000000006020830152604082019050919050565b6000612203602a836128ba565b91507f4552433732313a2062616c616e636520717565727920666f7220746865207a6560008301527f726f2061646472657373000000000000000000000000000000000000000000006020830152604082019050919050565b60006122696029836128ba565b91507f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460008301527f656e7420746f6b656e00000000000000000000000000000000000000000000006020830152604082019050919050565b60006122cf6020836128ba565b91507f4552433732313a206d696e7420746f20746865207a65726f20616464726573736000830152602082019050919050565b600061230f602c836128ba565b91507f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860008301527f697374656e7420746f6b656e00000000000000000000000000000000000000006020830152604082019050919050565b60006123756029836128ba565b91507f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960008301527f73206e6f74206f776e00000000000000000000000000000000000000000000006020830152604082019050919050565b60006123db602f836128ba565b91507f4552433732314d657461646174613a2055524920717565727920666f72206e6f60008301527f6e6578697374656e7420746f6b656e00000000000000000000000000000000006020830152604082019050919050565b60006124416021836128ba565b91507f4552433732313a20617070726f76616c20746f2063757272656e74206f776e6560008301527f72000000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b60006124a76031836128ba565b91507f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f60008301527f776e6572206e6f7220617070726f7665640000000000000000000000000000006020830152604082019050919050565b612509816129fb565b82525050565b600061251b8285611f47565b91506125278284611f47565b91508190509392505050565b60006020820190506125486000830184611eb7565b92915050565b60006080820190506125636000830187611eb7565b6125706020830186611eb7565b61257d6040830185612500565b818103606083015261258f8184611ed5565b905095945050505050565b60006020820190506125af6000830184611ec6565b92915050565b600060208201905081810360008301526125cf8184611f0e565b905092915050565b600060408201905081810360008301526125f18185611f0e565b90506126006020830184612500565b9392505050565b6000602082019050818103600083015261262081611f78565b9050919050565b6000602082019050818103600083015261264081611fde565b9050919050565b600060208201905081810360008301526126608161201e565b9050919050565b6000602082019050818103600083015261268081612084565b9050919050565b600060208201905081810360008301526126a0816120ea565b9050919050565b600060208201905081810360008301526126c08161212a565b9050919050565b600060208201905081810360008301526126e081612190565b9050919050565b60006020820190508181036000830152612700816121f6565b9050919050565b600060208201905081810360008301526127208161225c565b9050919050565b60006020820190508181036000830152612740816122c2565b9050919050565b6000602082019050818103600083015261276081612302565b9050919050565b6000602082019050818103600083015261278081612368565b9050919050565b600060208201905081810360008301526127a0816123ce565b9050919050565b600060208201905081810360008301526127c081612434565b9050919050565b600060208201905081810360008301526127e08161249a565b9050919050565b60006020820190506127fc6000830184612500565b92915050565b6000604051905081810181811067ffffffffffffffff8211171561282957612828612b80565b5b8060405250919050565b600067ffffffffffffffff82111561284e5761284d612b80565b5b601f19601f8301169050602081019050919050565b600067ffffffffffffffff82111561287e5761287d612b80565b5b601f19601f8301169050602081019050919050565b600081519050919050565b600081519050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600081905092915050565b60006128e1826129fb565b91506128ec836129fb565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561292157612920612af3565b5b828201905092915050565b6000612937826129fb565b9150612942836129fb565b92508261295257612951612b22565b5b828204905092915050565b6000612968826129fb565b9150612973836129fb565b92508282101561298657612985612af3565b5b828203905092915050565b600061299c826129db565b9050919050565b60008115159050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b83811015612a32578082015181840152602081019050612a17565b83811115612a41576000848401525b50505050565b60006002820490506001821680612a5f57607f821691505b60208210811415612a7357612a72612b51565b5b50919050565b6000612a84826129fb565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415612ab757612ab6612af3565b5b600182019050919050565b6000612acd826129fb565b9150612ad8836129fb565b925082612ae857612ae7612b22565b5b828206905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b612bc981612991565b8114612bd457600080fd5b50565b612be0816129a3565b8114612beb57600080fd5b50565b612bf7816129af565b8114612c0257600080fd5b50565b612c0e816129fb565b8114612c1957600080fd5b5056fea2646970667358221220edcd52e48554eb49d8207c0ac3d21f1f2f681c4ed196250824e04211ad850bda64736f6c63430008000033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061010b5760003560e01c80636352211e116100a2578063b88d4fde11610071578063b88d4fde146102b4578063c0576b73146102d0578063c87b56dd14610301578063e985e9c514610331578063f6b12f28146103615761010b565b80636352211e1461021a57806370a082311461024a57806395d89b411461027a578063a22cb465146102985761010b565b8063115dd1ab116100de578063115dd1ab146101aa57806323b872dd146101c65780632a0c5221146101e257806342842e0e146101fe5761010b565b806301ffc9a71461011057806306fdde0314610140578063081812fc1461015e578063095ea7b31461018e575b600080fd5b61012a60048036038101906101259190611dac565b61037f565b604051610137919061259a565b60405180910390f35b610148610461565b60405161015591906125b5565b60405180910390f35b61017860048036038101906101739190611e52565b6104f3565b6040516101859190612533565b60405180910390f35b6101a860048036038101906101a39190611d70565b610578565b005b6101c460048036038101906101bf9190611dfe565b610690565b005b6101e060048036038101906101db9190611c6a565b6107a3565b005b6101fc60048036038101906101f79190611e7b565b610803565b005b61021860048036038101906102139190611c6a565b610926565b005b610234600480360381019061022f9190611e52565b610946565b6040516102419190612533565b60405180910390f35b610264600480360381019061025f9190611c05565b6109f8565b60405161027191906127e7565b60405180910390f35b610282610ab0565b60405161028f91906125b5565b60405180910390f35b6102b260048036038101906102ad9190611d34565b610b42565b005b6102ce60048036038101906102c99190611cb9565b610cc3565b005b6102ea60048036038101906102e59190611e52565b610d25565b6040516102f89291906125d7565b60405180910390f35b61031b60048036038101906103169190611e52565b610de1565b60405161032891906125b5565b60405180910390f35b61034b60048036038101906103469190611c2e565b610e88565b604051610358919061259a565b60405180910390f35b610369610f1c565b6040516103769190612533565b60405180910390f35b60007f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061044a57507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b8061045a575061045982610f42565b5b9050919050565b60606000805461047090612a47565b80601f016020809104026020016040519081016040528092919081815260200182805461049c90612a47565b80156104e95780601f106104be576101008083540402835291602001916104e9565b820191906000526020600020905b8154815290600101906020018083116104cc57829003601f168201915b5050505050905090565b60006104fe82610fac565b61053d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161053490612747565b60405180910390fd5b6004600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600061058382610946565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156105f4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105eb906127a7565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16610613611018565b73ffffffffffffffffffffffffffffffffffffffff16148061064257506106418161063c611018565b610e88565b5b610681576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610678906126c7565b60405180910390fd5b61068b8383611020565b505050565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610720576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161071790612647565b60405180910390fd5b6000600680549050905060066040518060400160405280858152602001600181525090806001815401808255809150506001900390600052602060002090600202016000909190919091506000820151816000019080519060200190610787929190611a29565b5060208201518160010155505061079e82826110d9565b505050565b6107b46107ae611018565b826110f7565b6107f3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107ea906127c7565b60405180910390fd5b6107fe8383836111d5565b505050565b60006006838154811061083f577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000209060020201905060006006838154811061088b577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000209060020201905080600101548260010154106108e75760028260010160008282546108bf91906128d6565b9250508190555060018160010160008282546108db91906128d6565b92505081905550610920565b60018260010160008282546108fc91906128d6565b92505081905550600282600101600082825461091891906128d6565b925050819055505b50505050565b61094183838360405180602001604052806000815250610cc3565b505050565b6000806002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156109ef576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109e690612707565b60405180910390fd5b80915050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610a69576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a60906126e7565b60405180910390fd5b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b606060018054610abf90612a47565b80601f0160208091040260200160405190810160405280929190818152602001828054610aeb90612a47565b8015610b385780601f10610b0d57610100808354040283529160200191610b38565b820191906000526020600020905b815481529060010190602001808311610b1b57829003601f168201915b5050505050905090565b610b4a611018565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610bb8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610baf90612687565b60405180910390fd5b8060056000610bc5611018565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff16610c72611018565b73ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610cb7919061259a565b60405180910390a35050565b610cd4610cce611018565b836110f7565b610d13576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d0a906127c7565b60405180910390fd5b610d1f84848484611431565b50505050565b60068181548110610d3557600080fd5b9060005260206000209060020201600091509050806000018054610d5890612a47565b80601f0160208091040260200160405190810160405280929190818152602001828054610d8490612a47565b8015610dd15780601f10610da657610100808354040283529160200191610dd1565b820191906000526020600020905b815481529060010190602001808311610db457829003601f168201915b5050505050908060010154905082565b6060610dec82610fac565b610e2b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e2290612787565b60405180910390fd5b6000610e3561148d565b90506000815111610e555760405180602001604052806000815250610e80565b80610e5f846114a4565b604051602001610e7092919061250f565b6040516020818303038152906040525b915050919050565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b60008073ffffffffffffffffffffffffffffffffffffffff166002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614159050919050565b600033905090565b816004600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff1661109383610946565b73ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6110f3828260405180602001604052806000815250611651565b5050565b600061110282610fac565b611141576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611138906126a7565b60405180910390fd5b600061114c83610946565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614806111bb57508373ffffffffffffffffffffffffffffffffffffffff166111a3846104f3565b73ffffffffffffffffffffffffffffffffffffffff16145b806111cc57506111cb8185610e88565b5b91505092915050565b8273ffffffffffffffffffffffffffffffffffffffff166111f582610946565b73ffffffffffffffffffffffffffffffffffffffff161461124b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161124290612767565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156112bb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112b290612667565b60405180910390fd5b6112c68383836116ac565b6112d1600082611020565b6001600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254611321919061295d565b925050819055506001600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461137891906128d6565b92505081905550816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b61143c8484846111d5565b611448848484846116b1565b611487576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161147e90612607565b60405180910390fd5b50505050565b606060405180602001604052806000815250905090565b606060008214156114ec576040518060400160405280600181526020017f3000000000000000000000000000000000000000000000000000000000000000815250905061164c565b600082905060005b6000821461151e57808061150790612a79565b915050600a82611517919061292c565b91506114f4565b60008167ffffffffffffffff811115611560577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040519080825280601f01601f1916602001820160405280156115925781602001600182028036833780820191505090505b5090505b60008514611645576001826115ab919061295d565b9150600a856115ba9190612ac2565b60306115c691906128d6565b60f81b818381518110611602577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600a8561163e919061292c565b9450611596565b8093505050505b919050565b61165b8383611848565b61166860008484846116b1565b6116a7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161169e90612607565b60405180910390fd5b505050565b505050565b60006116d28473ffffffffffffffffffffffffffffffffffffffff16611a16565b1561183b578373ffffffffffffffffffffffffffffffffffffffff1663150b7a026116fb611018565b8786866040518563ffffffff1660e01b815260040161171d949392919061254e565b602060405180830381600087803b15801561173757600080fd5b505af192505050801561176857506040513d601f19601f820116820180604052508101906117659190611dd5565b60015b6117eb573d8060008114611798576040519150601f19603f3d011682016040523d82523d6000602084013e61179d565b606091505b506000815114156117e3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016117da90612607565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614915050611840565b600190505b949350505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156118b8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016118af90612727565b60405180910390fd5b6118c181610fac565b15611901576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016118f890612627565b60405180910390fd5b61190d600083836116ac565b6001600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461195d91906128d6565b92505081905550816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45050565b600080823b905060008111915050919050565b828054611a3590612a47565b90600052602060002090601f016020900481019282611a575760008555611a9e565b82601f10611a7057805160ff1916838001178555611a9e565b82800160010185558215611a9e579182015b82811115611a9d578251825591602001919060010190611a82565b5b509050611aab9190611aaf565b5090565b5b80821115611ac8576000816000905550600101611ab0565b5090565b6000611adf611ada84612833565b612802565b905082815260208101848484011115611af757600080fd5b611b02848285612a05565b509392505050565b6000611b1d611b1884612863565b612802565b905082815260208101848484011115611b3557600080fd5b611b40848285612a05565b509392505050565b600081359050611b5781612bc0565b92915050565b600081359050611b6c81612bd7565b92915050565b600081359050611b8181612bee565b92915050565b600081519050611b9681612bee565b92915050565b600082601f830112611bad57600080fd5b8135611bbd848260208601611acc565b91505092915050565b600082601f830112611bd757600080fd5b8135611be7848260208601611b0a565b91505092915050565b600081359050611bff81612c05565b92915050565b600060208284031215611c1757600080fd5b6000611c2584828501611b48565b91505092915050565b60008060408385031215611c4157600080fd5b6000611c4f85828601611b48565b9250506020611c6085828601611b48565b9150509250929050565b600080600060608486031215611c7f57600080fd5b6000611c8d86828701611b48565b9350506020611c9e86828701611b48565b9250506040611caf86828701611bf0565b9150509250925092565b60008060008060808587031215611ccf57600080fd5b6000611cdd87828801611b48565b9450506020611cee87828801611b48565b9350506040611cff87828801611bf0565b925050606085013567ffffffffffffffff811115611d1c57600080fd5b611d2887828801611b9c565b91505092959194509250565b60008060408385031215611d4757600080fd5b6000611d5585828601611b48565b9250506020611d6685828601611b5d565b9150509250929050565b60008060408385031215611d8357600080fd5b6000611d9185828601611b48565b9250506020611da285828601611bf0565b9150509250929050565b600060208284031215611dbe57600080fd5b6000611dcc84828501611b72565b91505092915050565b600060208284031215611de757600080fd5b6000611df584828501611b87565b91505092915050565b60008060408385031215611e1157600080fd5b600083013567ffffffffffffffff811115611e2b57600080fd5b611e3785828601611bc6565b9250506020611e4885828601611b48565b9150509250929050565b600060208284031215611e6457600080fd5b6000611e7284828501611bf0565b91505092915050565b60008060408385031215611e8e57600080fd5b6000611e9c85828601611bf0565b9250506020611ead85828601611bf0565b9150509250929050565b611ec081612991565b82525050565b611ecf816129a3565b82525050565b6000611ee082612893565b611eea81856128a9565b9350611efa818560208601612a14565b611f0381612baf565b840191505092915050565b6000611f198261289e565b611f2381856128ba565b9350611f33818560208601612a14565b611f3c81612baf565b840191505092915050565b6000611f528261289e565b611f5c81856128cb565b9350611f6c818560208601612a14565b80840191505092915050565b6000611f856032836128ba565b91507f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560008301527f63656976657220696d706c656d656e74657200000000000000000000000000006020830152604082019050919050565b6000611feb601c836128ba565b91507f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006000830152602082019050919050565b600061202b6027836128ba565b91507f4f6e6c792067616d65206f776e65722063616e20637265617465206e6577206d60008301527f6f6e7374657273000000000000000000000000000000000000000000000000006020830152604082019050919050565b60006120916024836128ba565b91507f4552433732313a207472616e7366657220746f20746865207a65726f2061646460008301527f72657373000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b60006120f76019836128ba565b91507f4552433732313a20617070726f766520746f2063616c6c6572000000000000006000830152602082019050919050565b6000612137602c836128ba565b91507f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860008301527f697374656e7420746f6b656e00000000000000000000000000000000000000006020830152604082019050919050565b600061219d6038836128ba565b91507f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760008301527f6e6572206e6f7220617070726f76656420666f7220616c6c00000000000000006020830152604082019050919050565b6000612203602a836128ba565b91507f4552433732313a2062616c616e636520717565727920666f7220746865207a6560008301527f726f2061646472657373000000000000000000000000000000000000000000006020830152604082019050919050565b60006122696029836128ba565b91507f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460008301527f656e7420746f6b656e00000000000000000000000000000000000000000000006020830152604082019050919050565b60006122cf6020836128ba565b91507f4552433732313a206d696e7420746f20746865207a65726f20616464726573736000830152602082019050919050565b600061230f602c836128ba565b91507f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860008301527f697374656e7420746f6b656e00000000000000000000000000000000000000006020830152604082019050919050565b60006123756029836128ba565b91507f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960008301527f73206e6f74206f776e00000000000000000000000000000000000000000000006020830152604082019050919050565b60006123db602f836128ba565b91507f4552433732314d657461646174613a2055524920717565727920666f72206e6f60008301527f6e6578697374656e7420746f6b656e00000000000000000000000000000000006020830152604082019050919050565b60006124416021836128ba565b91507f4552433732313a20617070726f76616c20746f2063757272656e74206f776e6560008301527f72000000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b60006124a76031836128ba565b91507f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f60008301527f776e6572206e6f7220617070726f7665640000000000000000000000000000006020830152604082019050919050565b612509816129fb565b82525050565b600061251b8285611f47565b91506125278284611f47565b91508190509392505050565b60006020820190506125486000830184611eb7565b92915050565b60006080820190506125636000830187611eb7565b6125706020830186611eb7565b61257d6040830185612500565b818103606083015261258f8184611ed5565b905095945050505050565b60006020820190506125af6000830184611ec6565b92915050565b600060208201905081810360008301526125cf8184611f0e565b905092915050565b600060408201905081810360008301526125f18185611f0e565b90506126006020830184612500565b9392505050565b6000602082019050818103600083015261262081611f78565b9050919050565b6000602082019050818103600083015261264081611fde565b9050919050565b600060208201905081810360008301526126608161201e565b9050919050565b6000602082019050818103600083015261268081612084565b9050919050565b600060208201905081810360008301526126a0816120ea565b9050919050565b600060208201905081810360008301526126c08161212a565b9050919050565b600060208201905081810360008301526126e081612190565b9050919050565b60006020820190508181036000830152612700816121f6565b9050919050565b600060208201905081810360008301526127208161225c565b9050919050565b60006020820190508181036000830152612740816122c2565b9050919050565b6000602082019050818103600083015261276081612302565b9050919050565b6000602082019050818103600083015261278081612368565b9050919050565b600060208201905081810360008301526127a0816123ce565b9050919050565b600060208201905081810360008301526127c081612434565b9050919050565b600060208201905081810360008301526127e08161249a565b9050919050565b60006020820190506127fc6000830184612500565b92915050565b6000604051905081810181811067ffffffffffffffff8211171561282957612828612b80565b5b8060405250919050565b600067ffffffffffffffff82111561284e5761284d612b80565b5b601f19601f8301169050602081019050919050565b600067ffffffffffffffff82111561287e5761287d612b80565b5b601f19601f8301169050602081019050919050565b600081519050919050565b600081519050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600081905092915050565b60006128e1826129fb565b91506128ec836129fb565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561292157612920612af3565b5b828201905092915050565b6000612937826129fb565b9150612942836129fb565b92508261295257612951612b22565b5b828204905092915050565b6000612968826129fb565b9150612973836129fb565b92508282101561298657612985612af3565b5b828203905092915050565b600061299c826129db565b9050919050565b60008115159050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b83811015612a32578082015181840152602081019050612a17565b83811115612a41576000848401525b50505050565b60006002820490506001821680612a5f57607f821691505b60208210811415612a7357612a72612b51565b5b50919050565b6000612a84826129fb565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415612ab757612ab6612af3565b5b600182019050919050565b6000612acd826129fb565b9150612ad8836129fb565b925082612ae857612ae7612b22565b5b828206905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b612bc981612991565b8114612bd457600080fd5b50565b612be0816129a3565b8114612beb57600080fd5b50565b612bf7816129af565b8114612c0257600080fd5b50565b612c0e816129fb565b8114612c1957600080fd5b5056fea2646970667358221220edcd52e48554eb49d8207c0ac3d21f1f2f681c4ed196250824e04211ad850bda64736f6c63430008000033",
  "immutableReferences": {},
  "sourceMap": "116:1097:0:-:0;;;282:80;;;;;;;;;;1321:114:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1396:5;1388;:13;;;;;;;;;;;;:::i;:::-;;1421:7;1411;:17;;;;;;;;;;;;:::i;:::-;;1321:114;;345:10:0::1;333:9;;:22;;;;;;;;;;;;;;;;;;116:1097:::0;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:320:11:-;;88:1;82:4;78:12;68:22;;135:1;129:4;125:12;156:18;146:2;;212:4;204:6;200:17;190:27;;146:2;274;266:6;263:14;243:18;240:38;237:2;;;293:18;;:::i;:::-;237:2;58:269;;;;:::o;333:180::-;381:77;378:1;371:88;478:4;475:1;468:15;502:4;499:1;492:15;116:1097:0;;;;;;;",
  "deployedSourceMap": "116:1097:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1502:288:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2408:98;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3820:217;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3371:388;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;948:263:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4684:300:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;520:422:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5050:149:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2111:235;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1849:205;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2570:102;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4104:290;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5265:282;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;220:25:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;2738:353:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4460:162;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;251:24:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1502:288:2;1604:4;1642:25;1627:40;;;:11;:40;;;;:104;;;;1698:33;1683:48;;;:11;:48;;;;1627:104;:156;;;;1747:36;1771:11;1747:23;:36::i;:::-;1627:156;1620:163;;1502:288;;;:::o;2408:98::-;2462:13;2494:5;2487:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2408:98;:::o;3820:217::-;3896:7;3923:16;3931:7;3923;:16::i;:::-;3915:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;4006:15;:24;4022:7;4006:24;;;;;;;;;;;;;;;;;;;;;3999:31;;3820:217;;;:::o;3371:388::-;3451:13;3467:23;3482:7;3467:14;:23::i;:::-;3451:39;;3514:5;3508:11;;:2;:11;;;;3500:57;;;;;;;;;;;;:::i;:::-;;;;;;;;;3592:5;3576:21;;:12;:10;:12::i;:::-;:21;;;:62;;;;3601:37;3618:5;3625:12;:10;:12::i;:::-;3601:16;:37::i;:::-;3576:62;3568:152;;;;;;;;;;;;:::i;:::-;;;;;;;;;3731:21;3740:2;3744:7;3731:8;:21::i;:::-;3371:388;;;:::o;948:263:0:-;1047:9;;;;;;;;;;;1033:23;;:10;:23;;;1025:75;;;;;;;;;;;;:::i;:::-;;;;;;;;;1110:7;1120:8;:15;;;;1110:25;;1145:8;1159:16;;;;;;;;1167:5;1159:16;;;;1173:1;1159:16;;;1145:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;1186:18;1196:3;1201:2;1186:9;:18::i;:::-;948:263;;;:::o;4684:300:2:-;4843:41;4862:12;:10;:12::i;:::-;4876:7;4843:18;:41::i;:::-;4835:103;;;;;;;;;;;;:::i;:::-;;;;;;;;;4949:28;4959:4;4965:2;4969:7;4949:9;:28::i;:::-;4684:300;;;:::o;520:422:0:-;601:24;628:8;637:17;628:27;;;;;;;;;;;;;;;;;;;;;;;;;;601:54;;665:24;692:8;701:17;692:27;;;;;;;;;;;;;;;;;;;;;;;;;;665:54;;752:8;:14;;;734:8;:14;;;:32;730:206;;800:1;782:8;:14;;;:19;;;;;;;:::i;:::-;;;;;;;;833:1;815:8;:14;;;:19;;;;;;;:::i;:::-;;;;;;;;730:206;;;891:1;873:8;:14;;;:19;;;;;;;:::i;:::-;;;;;;;;924:1;906:8;:14;;;:19;;;;;;;:::i;:::-;;;;;;;;730:206;520:422;;;;:::o;5050:149:2:-;5153:39;5170:4;5176:2;5180:7;5153:39;;;;;;;;;;;;:16;:39::i;:::-;5050:149;;;:::o;2111:235::-;2183:7;2202:13;2218:7;:16;2226:7;2218:16;;;;;;;;;;;;;;;;;;;;;2202:32;;2269:1;2252:19;;:5;:19;;;;2244:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;2334:5;2327:12;;;2111:235;;;:::o;1849:205::-;1921:7;1965:1;1948:19;;:5;:19;;;;1940:74;;;;;;;;;;;;:::i;:::-;;;;;;;;;2031:9;:16;2041:5;2031:16;;;;;;;;;;;;;;;;2024:23;;1849:205;;;:::o;2570:102::-;2626:13;2658:7;2651:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2570:102;:::o;4104:290::-;4218:12;:10;:12::i;:::-;4206:24;;:8;:24;;;;4198:62;;;;;;;;;;;;:::i;:::-;;;;;;;;;4316:8;4271:18;:32;4290:12;:10;:12::i;:::-;4271:32;;;;;;;;;;;;;;;:42;4304:8;4271:42;;;;;;;;;;;;;;;;:53;;;;;;;;;;;;;;;;;;4368:8;4339:48;;4354:12;:10;:12::i;:::-;4339:48;;;4378:8;4339:48;;;;;;:::i;:::-;;;;;;;;4104:290;;:::o;5265:282::-;5396:41;5415:12;:10;:12::i;:::-;5429:7;5396:18;:41::i;:::-;5388:103;;;;;;;;;;;;:::i;:::-;;;;;;;;;5501:39;5515:4;5521:2;5525:7;5534:5;5501:13;:39::i;:::-;5265:282;;;;:::o;220:25:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2738:353:2:-;2811:13;2844:16;2852:7;2844;:16::i;:::-;2836:76;;;;;;;;;;;;:::i;:::-;;;;;;;;;2923:21;2947:10;:8;:10::i;:::-;2923:34;;2998:1;2980:7;2974:21;:25;:110;;;;;;;;;;;;;;;;;3038:7;3047:18;:7;:16;:18::i;:::-;3021:45;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2974:110;2967:117;;;2738:353;;;:::o;4460:162::-;4557:4;4580:18;:25;4599:5;4580:25;;;;;;;;;;;;;;;:35;4606:8;4580:35;;;;;;;;;;;;;;;;;;;;;;;;;4573:42;;4460:162;;;;:::o;251:24:0:-;;;;;;;;;;;;;:::o;763:155:9:-;848:4;886:25;871:40;;;:11;:40;;;;864:47;;763:155;;;:::o;6981:125:2:-;7046:4;7097:1;7069:30;;:7;:16;7077:7;7069:16;;;;;;;;;;;;;;;;;;;;;:30;;;;7062:37;;6981:125;;;:::o;586:96:7:-;639:7;665:10;658:17;;586:96;:::o;10738:171:2:-;10839:2;10812:15;:24;10828:7;10812:24;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;10894:7;10890:2;10856:46;;10865:23;10880:7;10865:14;:23::i;:::-;10856:46;;;;;;;;;;;;10738:171;;:::o;7938:108::-;8013:26;8023:2;8027:7;8013:26;;;;;;;;;;;;:9;:26::i;:::-;7938:108;;:::o;7264:344::-;7357:4;7381:16;7389:7;7381;:16::i;:::-;7373:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;7456:13;7472:23;7487:7;7472:14;:23::i;:::-;7456:39;;7524:5;7513:16;;:7;:16;;;:51;;;;7557:7;7533:31;;:20;7545:7;7533:11;:20::i;:::-;:31;;;7513:51;:87;;;;7568:32;7585:5;7592:7;7568:16;:32::i;:::-;7513:87;7505:96;;;7264:344;;;;:::o;10097:530::-;10221:4;10194:31;;:23;10209:7;10194:14;:23::i;:::-;:31;;;10186:85;;;;;;;;;;;;:::i;:::-;;;;;;;;;10303:1;10289:16;;:2;:16;;;;10281:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;10357:39;10378:4;10384:2;10388:7;10357:20;:39::i;:::-;10458:29;10475:1;10479:7;10458:8;:29::i;:::-;10517:1;10498:9;:15;10508:4;10498:15;;;;;;;;;;;;;;;;:20;;;;;;;:::i;:::-;;;;;;;;10545:1;10528:9;:13;10538:2;10528:13;;;;;;;;;;;;;;;;:18;;;;;;;:::i;:::-;;;;;;;;10575:2;10556:7;:16;10564:7;10556:16;;;;;;;;;;;;:21;;;;;;;;;;;;;;;;;;10612:7;10608:2;10593:27;;10602:4;10593:27;;;;;;;;;;;;10097:530;;;:::o;6409:269::-;6522:28;6532:4;6538:2;6542:7;6522:9;:28::i;:::-;6568:48;6591:4;6597:2;6601:7;6610:5;6568:22;:48::i;:::-;6560:111;;;;;;;;;;;;:::i;:::-;;;;;;;;;6409:269;;;;:::o;3222:92::-;3273:13;3298:9;;;;;;;;;;;;;;3222:92;:::o;271:703:8:-;327:13;553:1;544:5;:10;540:51;;;570:10;;;;;;;;;;;;;;;;;;;;;540:51;600:12;615:5;600:20;;630:14;654:75;669:1;661:4;:9;654:75;;686:8;;;;;:::i;:::-;;;;716:2;708:10;;;;;:::i;:::-;;;654:75;;;738:19;770:6;760:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;738:39;;787:150;803:1;794:5;:10;787:150;;830:1;820:11;;;;;:::i;:::-;;;896:2;888:5;:10;;;;:::i;:::-;875:2;:24;;;;:::i;:::-;862:39;;845:6;852;845:14;;;;;;;;;;;;;;;;;;;:56;;;;;;;;;;;924:2;915:11;;;;;:::i;:::-;;;787:150;;;960:6;946:21;;;;;271:703;;;;:::o;8267:247:2:-;8362:18;8368:2;8372:7;8362:5;:18::i;:::-;8398:54;8429:1;8433:2;8437:7;8446:5;8398:22;:54::i;:::-;8390:117;;;;;;;;;;;;:::i;:::-;;;;;;;;;8267:247;;;:::o;12882:93::-;;;;:::o;11462:824::-;11582:4;11606:15;:2;:13;;;:15::i;:::-;11602:678;;;11657:2;11641:36;;;11678:12;:10;:12::i;:::-;11692:4;11698:7;11707:5;11641:72;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;11637:591;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11901:1;11884:6;:13;:18;11880:334;;;11926:60;;;;;;;;;;:::i;:::-;;;;;;;;11880:334;12166:6;12160:13;12151:6;12147:2;12143:15;12136:38;11637:591;11773:45;;;11763:55;;;:6;:55;;;;11756:62;;;;;11602:678;12265:4;12258:11;;11462:824;;;;;;;:::o;8836:372::-;8929:1;8915:16;;:2;:16;;;;8907:61;;;;;;;;;;;;:::i;:::-;;;;;;;;;8987:16;8995:7;8987;:16::i;:::-;8986:17;8978:58;;;;;;;;;;;;:::i;:::-;;;;;;;;;9047:45;9076:1;9080:2;9084:7;9047:20;:45::i;:::-;9120:1;9103:9;:13;9113:2;9103:13;;;;;;;;;;;;;;;;:18;;;;;;;:::i;:::-;;;;;;;;9150:2;9131:7;:16;9139:7;9131:16;;;;;;;;;;;;:21;;;;;;;;;;;;;;;;;;9193:7;9189:2;9168:33;;9185:1;9168:33;;;;;;;;;;;;8836:372;;:::o;718:413:6:-;778:4;981:12;1090:7;1078:20;1070:28;;1123:1;1116:4;:8;1109:15;;;718:413;;;:::o;-1:-1:-1:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:342:11:-;;109:64;124:48;165:6;124:48;:::i;:::-;109:64;:::i;:::-;100:73;;196:6;189:5;182:21;234:4;227:5;223:16;272:3;263:6;258:3;254:16;251:25;248:2;;;289:1;286;279:12;248:2;302:41;336:6;331:3;326;302:41;:::i;:::-;90:259;;;;;;:::o;355:344::-;;458:65;473:49;515:6;473:49;:::i;:::-;458:65;:::i;:::-;449:74;;546:6;539:5;532:21;584:4;577:5;573:16;622:3;613:6;608:3;604:16;601:25;598:2;;;639:1;636;629:12;598:2;652:41;686:6;681:3;676;652:41;:::i;:::-;439:260;;;;;;:::o;705:139::-;;789:6;776:20;767:29;;805:33;832:5;805:33;:::i;:::-;757:87;;;;:::o;850:133::-;;931:6;918:20;909:29;;947:30;971:5;947:30;:::i;:::-;899:84;;;;:::o;989:137::-;;1072:6;1059:20;1050:29;;1088:32;1114:5;1088:32;:::i;:::-;1040:86;;;;:::o;1132:141::-;;1219:6;1213:13;1204:22;;1235:32;1261:5;1235:32;:::i;:::-;1194:79;;;;:::o;1292:271::-;;1396:3;1389:4;1381:6;1377:17;1373:27;1363:2;;1414:1;1411;1404:12;1363:2;1454:6;1441:20;1479:78;1553:3;1545:6;1538:4;1530:6;1526:17;1479:78;:::i;:::-;1470:87;;1353:210;;;;;:::o;1583:273::-;;1688:3;1681:4;1673:6;1669:17;1665:27;1655:2;;1706:1;1703;1696:12;1655:2;1746:6;1733:20;1771:79;1846:3;1838:6;1831:4;1823:6;1819:17;1771:79;:::i;:::-;1762:88;;1645:211;;;;;:::o;1862:139::-;;1946:6;1933:20;1924:29;;1962:33;1989:5;1962:33;:::i;:::-;1914:87;;;;:::o;2007:262::-;;2115:2;2103:9;2094:7;2090:23;2086:32;2083:2;;;2131:1;2128;2121:12;2083:2;2174:1;2199:53;2244:7;2235:6;2224:9;2220:22;2199:53;:::i;:::-;2189:63;;2145:117;2073:196;;;;:::o;2275:407::-;;;2400:2;2388:9;2379:7;2375:23;2371:32;2368:2;;;2416:1;2413;2406:12;2368:2;2459:1;2484:53;2529:7;2520:6;2509:9;2505:22;2484:53;:::i;:::-;2474:63;;2430:117;2586:2;2612:53;2657:7;2648:6;2637:9;2633:22;2612:53;:::i;:::-;2602:63;;2557:118;2358:324;;;;;:::o;2688:552::-;;;;2830:2;2818:9;2809:7;2805:23;2801:32;2798:2;;;2846:1;2843;2836:12;2798:2;2889:1;2914:53;2959:7;2950:6;2939:9;2935:22;2914:53;:::i;:::-;2904:63;;2860:117;3016:2;3042:53;3087:7;3078:6;3067:9;3063:22;3042:53;:::i;:::-;3032:63;;2987:118;3144:2;3170:53;3215:7;3206:6;3195:9;3191:22;3170:53;:::i;:::-;3160:63;;3115:118;2788:452;;;;;:::o;3246:809::-;;;;;3414:3;3402:9;3393:7;3389:23;3385:33;3382:2;;;3431:1;3428;3421:12;3382:2;3474:1;3499:53;3544:7;3535:6;3524:9;3520:22;3499:53;:::i;:::-;3489:63;;3445:117;3601:2;3627:53;3672:7;3663:6;3652:9;3648:22;3627:53;:::i;:::-;3617:63;;3572:118;3729:2;3755:53;3800:7;3791:6;3780:9;3776:22;3755:53;:::i;:::-;3745:63;;3700:118;3885:2;3874:9;3870:18;3857:32;3916:18;3908:6;3905:30;3902:2;;;3948:1;3945;3938:12;3902:2;3976:62;4030:7;4021:6;4010:9;4006:22;3976:62;:::i;:::-;3966:72;;3828:220;3372:683;;;;;;;:::o;4061:401::-;;;4183:2;4171:9;4162:7;4158:23;4154:32;4151:2;;;4199:1;4196;4189:12;4151:2;4242:1;4267:53;4312:7;4303:6;4292:9;4288:22;4267:53;:::i;:::-;4257:63;;4213:117;4369:2;4395:50;4437:7;4428:6;4417:9;4413:22;4395:50;:::i;:::-;4385:60;;4340:115;4141:321;;;;;:::o;4468:407::-;;;4593:2;4581:9;4572:7;4568:23;4564:32;4561:2;;;4609:1;4606;4599:12;4561:2;4652:1;4677:53;4722:7;4713:6;4702:9;4698:22;4677:53;:::i;:::-;4667:63;;4623:117;4779:2;4805:53;4850:7;4841:6;4830:9;4826:22;4805:53;:::i;:::-;4795:63;;4750:118;4551:324;;;;;:::o;4881:260::-;;4988:2;4976:9;4967:7;4963:23;4959:32;4956:2;;;5004:1;5001;4994:12;4956:2;5047:1;5072:52;5116:7;5107:6;5096:9;5092:22;5072:52;:::i;:::-;5062:62;;5018:116;4946:195;;;;:::o;5147:282::-;;5265:2;5253:9;5244:7;5240:23;5236:32;5233:2;;;5281:1;5278;5271:12;5233:2;5324:1;5349:63;5404:7;5395:6;5384:9;5380:22;5349:63;:::i;:::-;5339:73;;5295:127;5223:206;;;;:::o;5435:520::-;;;5570:2;5558:9;5549:7;5545:23;5541:32;5538:2;;;5586:1;5583;5576:12;5538:2;5657:1;5646:9;5642:17;5629:31;5687:18;5679:6;5676:30;5673:2;;;5719:1;5716;5709:12;5673:2;5747:63;5802:7;5793:6;5782:9;5778:22;5747:63;:::i;:::-;5737:73;;5600:220;5859:2;5885:53;5930:7;5921:6;5910:9;5906:22;5885:53;:::i;:::-;5875:63;;5830:118;5528:427;;;;;:::o;5961:262::-;;6069:2;6057:9;6048:7;6044:23;6040:32;6037:2;;;6085:1;6082;6075:12;6037:2;6128:1;6153:53;6198:7;6189:6;6178:9;6174:22;6153:53;:::i;:::-;6143:63;;6099:117;6027:196;;;;:::o;6229:407::-;;;6354:2;6342:9;6333:7;6329:23;6325:32;6322:2;;;6370:1;6367;6360:12;6322:2;6413:1;6438:53;6483:7;6474:6;6463:9;6459:22;6438:53;:::i;:::-;6428:63;;6384:117;6540:2;6566:53;6611:7;6602:6;6591:9;6587:22;6566:53;:::i;:::-;6556:63;;6511:118;6312:324;;;;;:::o;6642:118::-;6729:24;6747:5;6729:24;:::i;:::-;6724:3;6717:37;6707:53;;:::o;6766:109::-;6847:21;6862:5;6847:21;:::i;:::-;6842:3;6835:34;6825:50;;:::o;6881:360::-;;6995:38;7027:5;6995:38;:::i;:::-;7049:70;7112:6;7107:3;7049:70;:::i;:::-;7042:77;;7128:52;7173:6;7168:3;7161:4;7154:5;7150:16;7128:52;:::i;:::-;7205:29;7227:6;7205:29;:::i;:::-;7200:3;7196:39;7189:46;;6971:270;;;;;:::o;7247:364::-;;7363:39;7396:5;7363:39;:::i;:::-;7418:71;7482:6;7477:3;7418:71;:::i;:::-;7411:78;;7498:52;7543:6;7538:3;7531:4;7524:5;7520:16;7498:52;:::i;:::-;7575:29;7597:6;7575:29;:::i;:::-;7570:3;7566:39;7559:46;;7339:272;;;;;:::o;7617:377::-;;7751:39;7784:5;7751:39;:::i;:::-;7806:89;7888:6;7883:3;7806:89;:::i;:::-;7799:96;;7904:52;7949:6;7944:3;7937:4;7930:5;7926:16;7904:52;:::i;:::-;7981:6;7976:3;7972:16;7965:23;;7727:267;;;;;:::o;8000:382::-;;8163:67;8227:2;8222:3;8163:67;:::i;:::-;8156:74;;8260:34;8256:1;8251:3;8247:11;8240:55;8326:20;8321:2;8316:3;8312:12;8305:42;8373:2;8368:3;8364:12;8357:19;;8146:236;;;:::o;8388:326::-;;8551:67;8615:2;8610:3;8551:67;:::i;:::-;8544:74;;8648:30;8644:1;8639:3;8635:11;8628:51;8705:2;8700:3;8696:12;8689:19;;8534:180;;;:::o;8720:371::-;;8883:67;8947:2;8942:3;8883:67;:::i;:::-;8876:74;;8980:34;8976:1;8971:3;8967:11;8960:55;9046:9;9041:2;9036:3;9032:12;9025:31;9082:2;9077:3;9073:12;9066:19;;8866:225;;;:::o;9097:368::-;;9260:67;9324:2;9319:3;9260:67;:::i;:::-;9253:74;;9357:34;9353:1;9348:3;9344:11;9337:55;9423:6;9418:2;9413:3;9409:12;9402:28;9456:2;9451:3;9447:12;9440:19;;9243:222;;;:::o;9471:323::-;;9634:67;9698:2;9693:3;9634:67;:::i;:::-;9627:74;;9731:27;9727:1;9722:3;9718:11;9711:48;9785:2;9780:3;9776:12;9769:19;;9617:177;;;:::o;9800:376::-;;9963:67;10027:2;10022:3;9963:67;:::i;:::-;9956:74;;10060:34;10056:1;10051:3;10047:11;10040:55;10126:14;10121:2;10116:3;10112:12;10105:36;10167:2;10162:3;10158:12;10151:19;;9946:230;;;:::o;10182:388::-;;10345:67;10409:2;10404:3;10345:67;:::i;:::-;10338:74;;10442:34;10438:1;10433:3;10429:11;10422:55;10508:26;10503:2;10498:3;10494:12;10487:48;10561:2;10556:3;10552:12;10545:19;;10328:242;;;:::o;10576:374::-;;10739:67;10803:2;10798:3;10739:67;:::i;:::-;10732:74;;10836:34;10832:1;10827:3;10823:11;10816:55;10902:12;10897:2;10892:3;10888:12;10881:34;10941:2;10936:3;10932:12;10925:19;;10722:228;;;:::o;10956:373::-;;11119:67;11183:2;11178:3;11119:67;:::i;:::-;11112:74;;11216:34;11212:1;11207:3;11203:11;11196:55;11282:11;11277:2;11272:3;11268:12;11261:33;11320:2;11315:3;11311:12;11304:19;;11102:227;;;:::o;11335:330::-;;11498:67;11562:2;11557:3;11498:67;:::i;:::-;11491:74;;11595:34;11591:1;11586:3;11582:11;11575:55;11656:2;11651:3;11647:12;11640:19;;11481:184;;;:::o;11671:376::-;;11834:67;11898:2;11893:3;11834:67;:::i;:::-;11827:74;;11931:34;11927:1;11922:3;11918:11;11911:55;11997:14;11992:2;11987:3;11983:12;11976:36;12038:2;12033:3;12029:12;12022:19;;11817:230;;;:::o;12053:373::-;;12216:67;12280:2;12275:3;12216:67;:::i;:::-;12209:74;;12313:34;12309:1;12304:3;12300:11;12293:55;12379:11;12374:2;12369:3;12365:12;12358:33;12417:2;12412:3;12408:12;12401:19;;12199:227;;;:::o;12432:379::-;;12595:67;12659:2;12654:3;12595:67;:::i;:::-;12588:74;;12692:34;12688:1;12683:3;12679:11;12672:55;12758:17;12753:2;12748:3;12744:12;12737:39;12802:2;12797:3;12793:12;12786:19;;12578:233;;;:::o;12817:365::-;;12980:67;13044:2;13039:3;12980:67;:::i;:::-;12973:74;;13077:34;13073:1;13068:3;13064:11;13057:55;13143:3;13138:2;13133:3;13129:12;13122:25;13173:2;13168:3;13164:12;13157:19;;12963:219;;;:::o;13188:381::-;;13351:67;13415:2;13410:3;13351:67;:::i;:::-;13344:74;;13448:34;13444:1;13439:3;13435:11;13428:55;13514:19;13509:2;13504:3;13500:12;13493:41;13560:2;13555:3;13551:12;13544:19;;13334:235;;;:::o;13575:118::-;13662:24;13680:5;13662:24;:::i;:::-;13657:3;13650:37;13640:53;;:::o;13699:435::-;;13901:95;13992:3;13983:6;13901:95;:::i;:::-;13894:102;;14013:95;14104:3;14095:6;14013:95;:::i;:::-;14006:102;;14125:3;14118:10;;13883:251;;;;;:::o;14140:222::-;;14271:2;14260:9;14256:18;14248:26;;14284:71;14352:1;14341:9;14337:17;14328:6;14284:71;:::i;:::-;14238:124;;;;:::o;14368:640::-;;14601:3;14590:9;14586:19;14578:27;;14615:71;14683:1;14672:9;14668:17;14659:6;14615:71;:::i;:::-;14696:72;14764:2;14753:9;14749:18;14740:6;14696:72;:::i;:::-;14778;14846:2;14835:9;14831:18;14822:6;14778:72;:::i;:::-;14897:9;14891:4;14887:20;14882:2;14871:9;14867:18;14860:48;14925:76;14996:4;14987:6;14925:76;:::i;:::-;14917:84;;14568:440;;;;;;;:::o;15014:210::-;;15139:2;15128:9;15124:18;15116:26;;15152:65;15214:1;15203:9;15199:17;15190:6;15152:65;:::i;:::-;15106:118;;;;:::o;15230:313::-;;15381:2;15370:9;15366:18;15358:26;;15430:9;15424:4;15420:20;15416:1;15405:9;15401:17;15394:47;15458:78;15531:4;15522:6;15458:78;:::i;:::-;15450:86;;15348:195;;;;:::o;15549:423::-;;15728:2;15717:9;15713:18;15705:26;;15777:9;15771:4;15767:20;15763:1;15752:9;15748:17;15741:47;15805:78;15878:4;15869:6;15805:78;:::i;:::-;15797:86;;15893:72;15961:2;15950:9;15946:18;15937:6;15893:72;:::i;:::-;15695:277;;;;;:::o;15978:419::-;;16182:2;16171:9;16167:18;16159:26;;16231:9;16225:4;16221:20;16217:1;16206:9;16202:17;16195:47;16259:131;16385:4;16259:131;:::i;:::-;16251:139;;16149:248;;;:::o;16403:419::-;;16607:2;16596:9;16592:18;16584:26;;16656:9;16650:4;16646:20;16642:1;16631:9;16627:17;16620:47;16684:131;16810:4;16684:131;:::i;:::-;16676:139;;16574:248;;;:::o;16828:419::-;;17032:2;17021:9;17017:18;17009:26;;17081:9;17075:4;17071:20;17067:1;17056:9;17052:17;17045:47;17109:131;17235:4;17109:131;:::i;:::-;17101:139;;16999:248;;;:::o;17253:419::-;;17457:2;17446:9;17442:18;17434:26;;17506:9;17500:4;17496:20;17492:1;17481:9;17477:17;17470:47;17534:131;17660:4;17534:131;:::i;:::-;17526:139;;17424:248;;;:::o;17678:419::-;;17882:2;17871:9;17867:18;17859:26;;17931:9;17925:4;17921:20;17917:1;17906:9;17902:17;17895:47;17959:131;18085:4;17959:131;:::i;:::-;17951:139;;17849:248;;;:::o;18103:419::-;;18307:2;18296:9;18292:18;18284:26;;18356:9;18350:4;18346:20;18342:1;18331:9;18327:17;18320:47;18384:131;18510:4;18384:131;:::i;:::-;18376:139;;18274:248;;;:::o;18528:419::-;;18732:2;18721:9;18717:18;18709:26;;18781:9;18775:4;18771:20;18767:1;18756:9;18752:17;18745:47;18809:131;18935:4;18809:131;:::i;:::-;18801:139;;18699:248;;;:::o;18953:419::-;;19157:2;19146:9;19142:18;19134:26;;19206:9;19200:4;19196:20;19192:1;19181:9;19177:17;19170:47;19234:131;19360:4;19234:131;:::i;:::-;19226:139;;19124:248;;;:::o;19378:419::-;;19582:2;19571:9;19567:18;19559:26;;19631:9;19625:4;19621:20;19617:1;19606:9;19602:17;19595:47;19659:131;19785:4;19659:131;:::i;:::-;19651:139;;19549:248;;;:::o;19803:419::-;;20007:2;19996:9;19992:18;19984:26;;20056:9;20050:4;20046:20;20042:1;20031:9;20027:17;20020:47;20084:131;20210:4;20084:131;:::i;:::-;20076:139;;19974:248;;;:::o;20228:419::-;;20432:2;20421:9;20417:18;20409:26;;20481:9;20475:4;20471:20;20467:1;20456:9;20452:17;20445:47;20509:131;20635:4;20509:131;:::i;:::-;20501:139;;20399:248;;;:::o;20653:419::-;;20857:2;20846:9;20842:18;20834:26;;20906:9;20900:4;20896:20;20892:1;20881:9;20877:17;20870:47;20934:131;21060:4;20934:131;:::i;:::-;20926:139;;20824:248;;;:::o;21078:419::-;;21282:2;21271:9;21267:18;21259:26;;21331:9;21325:4;21321:20;21317:1;21306:9;21302:17;21295:47;21359:131;21485:4;21359:131;:::i;:::-;21351:139;;21249:248;;;:::o;21503:419::-;;21707:2;21696:9;21692:18;21684:26;;21756:9;21750:4;21746:20;21742:1;21731:9;21727:17;21720:47;21784:131;21910:4;21784:131;:::i;:::-;21776:139;;21674:248;;;:::o;21928:419::-;;22132:2;22121:9;22117:18;22109:26;;22181:9;22175:4;22171:20;22167:1;22156:9;22152:17;22145:47;22209:131;22335:4;22209:131;:::i;:::-;22201:139;;22099:248;;;:::o;22353:222::-;;22484:2;22473:9;22469:18;22461:26;;22497:71;22565:1;22554:9;22550:17;22541:6;22497:71;:::i;:::-;22451:124;;;;:::o;22581:283::-;;22647:2;22641:9;22631:19;;22689:4;22681:6;22677:17;22796:6;22784:10;22781:22;22760:18;22748:10;22745:34;22742:62;22739:2;;;22807:18;;:::i;:::-;22739:2;22847:10;22843:2;22836:22;22621:243;;;;:::o;22870:331::-;;23021:18;23013:6;23010:30;23007:2;;;23043:18;;:::i;:::-;23007:2;23128:4;23124:9;23117:4;23109:6;23105:17;23101:33;23093:41;;23189:4;23183;23179:15;23171:23;;22936:265;;;:::o;23207:332::-;;23359:18;23351:6;23348:30;23345:2;;;23381:18;;:::i;:::-;23345:2;23466:4;23462:9;23455:4;23447:6;23443:17;23439:33;23431:41;;23527:4;23521;23517:15;23509:23;;23274:265;;;:::o;23545:98::-;;23630:5;23624:12;23614:22;;23603:40;;;:::o;23649:99::-;;23735:5;23729:12;23719:22;;23708:40;;;:::o;23754:168::-;;23871:6;23866:3;23859:19;23911:4;23906:3;23902:14;23887:29;;23849:73;;;;:::o;23928:169::-;;24046:6;24041:3;24034:19;24086:4;24081:3;24077:14;24062:29;;24024:73;;;;:::o;24103:148::-;;24242:3;24227:18;;24217:34;;;;:::o;24257:305::-;;24316:20;24334:1;24316:20;:::i;:::-;24311:25;;24350:20;24368:1;24350:20;:::i;:::-;24345:25;;24504:1;24436:66;24432:74;24429:1;24426:81;24423:2;;;24510:18;;:::i;:::-;24423:2;24554:1;24551;24547:9;24540:16;;24301:261;;;;:::o;24568:185::-;;24625:20;24643:1;24625:20;:::i;:::-;24620:25;;24659:20;24677:1;24659:20;:::i;:::-;24654:25;;24698:1;24688:2;;24703:18;;:::i;:::-;24688:2;24745:1;24742;24738:9;24733:14;;24610:143;;;;:::o;24759:191::-;;24819:20;24837:1;24819:20;:::i;:::-;24814:25;;24853:20;24871:1;24853:20;:::i;:::-;24848:25;;24892:1;24889;24886:8;24883:2;;;24897:18;;:::i;:::-;24883:2;24942:1;24939;24935:9;24927:17;;24804:146;;;;:::o;24956:96::-;;25022:24;25040:5;25022:24;:::i;:::-;25011:35;;25001:51;;;:::o;25058:90::-;;25135:5;25128:13;25121:21;25110:32;;25100:48;;;:::o;25154:149::-;;25230:66;25223:5;25219:78;25208:89;;25198:105;;;:::o;25309:126::-;;25386:42;25379:5;25375:54;25364:65;;25354:81;;;:::o;25441:77::-;;25507:5;25496:16;;25486:32;;;:::o;25524:154::-;25608:6;25603:3;25598;25585:30;25670:1;25661:6;25656:3;25652:16;25645:27;25575:103;;;:::o;25684:307::-;25752:1;25762:113;25776:6;25773:1;25770:13;25762:113;;;25861:1;25856:3;25852:11;25846:18;25842:1;25837:3;25833:11;25826:39;25798:2;25795:1;25791:10;25786:15;;25762:113;;;25893:6;25890:1;25887:13;25884:2;;;25973:1;25964:6;25959:3;25955:16;25948:27;25884:2;25733:258;;;;:::o;25997:320::-;;26078:1;26072:4;26068:12;26058:22;;26125:1;26119:4;26115:12;26146:18;26136:2;;26202:4;26194:6;26190:17;26180:27;;26136:2;26264;26256:6;26253:14;26233:18;26230:38;26227:2;;;26283:18;;:::i;:::-;26227:2;26048:269;;;;:::o;26323:233::-;;26385:24;26403:5;26385:24;:::i;:::-;26376:33;;26431:66;26424:5;26421:77;26418:2;;;26501:18;;:::i;:::-;26418:2;26548:1;26541:5;26537:13;26530:20;;26366:190;;;:::o;26562:176::-;;26611:20;26629:1;26611:20;:::i;:::-;26606:25;;26645:20;26663:1;26645:20;:::i;:::-;26640:25;;26684:1;26674:2;;26689:18;;:::i;:::-;26674:2;26730:1;26727;26723:9;26718:14;;26596:142;;;;:::o;26744:180::-;26792:77;26789:1;26782:88;26889:4;26886:1;26879:15;26913:4;26910:1;26903:15;26930:180;26978:77;26975:1;26968:88;27075:4;27072:1;27065:15;27099:4;27096:1;27089:15;27116:180;27164:77;27161:1;27154:88;27261:4;27258:1;27251:15;27285:4;27282:1;27275:15;27302:180;27350:77;27347:1;27340:88;27447:4;27444:1;27437:15;27471:4;27468:1;27461:15;27488:102;;27580:2;27576:7;27571:2;27564:5;27560:14;27556:28;27546:38;;27536:54;;;:::o;27596:122::-;27669:24;27687:5;27669:24;:::i;:::-;27662:5;27659:35;27649:2;;27708:1;27705;27698:12;27649:2;27639:79;:::o;27724:116::-;27794:21;27809:5;27794:21;:::i;:::-;27787:5;27784:32;27774:2;;27830:1;27827;27820:12;27774:2;27764:76;:::o;27846:120::-;27918:23;27935:5;27918:23;:::i;:::-;27911:5;27908:34;27898:2;;27956:1;27953;27946:12;27898:2;27888:78;:::o;27972:122::-;28045:24;28063:5;28045:24;:::i;:::-;28038:5;28035:35;28025:2;;28084:1;28081;28074:12;28025:2;28015:79;:::o",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts/token/ERC721/ERC721.sol\";\n\ncontract Ethermon is ERC721 {\n\n    struct Monster {\n        string name;\n        uint level;\n    }\n\n    Monster[] public monsters;\n    address public gameOwner;\n\n    constructor() ERC721(\"Ethermon\", \"EMON\") {\n        gameOwner = msg.sender;\n    }\n\n    modifier onlyOwnerOf(uint _monsterId) {\n        require(ownerOf(_monsterId) == msg.sender, \"Must be owner of monster to battle\");\n        _;\n    }\n\n    function battle(uint _attackingMonster, uint _defendingMonster) public {\n        Monster storage attacker = monsters[_attackingMonster];\n        Monster storage defender = monsters[_defendingMonster];\n\n        if (attacker.level >= defender.level) {\n            attacker.level += 2;\n            defender.level += 1;\n        }\n\n        else{\n            attacker.level += 1;\n            attacker.level += 2;\n        }\n    }\n\n    function createNewMonster(string memory _name, address _to) public {\n        require(msg.sender == gameOwner, \"Only game owner can create new monsters\");\n        uint id = monsters.length;\n        monsters.push(Monster(_name,1));\n        _safeMint(_to, id);\n    }\n}",
  "sourcePath": "/Users/umutyerli/blockchain/ethermon/contracts/Ethermon.sol",
  "ast": {
    "absolutePath": "/Users/umutyerli/blockchain/ethermon/contracts/Ethermon.sol",
    "exportedSymbols": {
      "Address": [
        1442
      ],
      "Context": [
        1465
      ],
      "ERC165": [
        1692
      ],
      "ERC721": [
        985
      ],
      "Ethermon": [
        134
      ],
      "IERC165": [
        1704
      ],
      "IERC721": [
        1101
      ],
      "IERC721Metadata": [
        1146
      ],
      "IERC721Receiver": [
        1119
      ],
      "Strings": [
        1668
      ]
    },
    "id": 135,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:0"
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
        "file": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 135,
        "sourceUnit": 986,
        "src": "57:57:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 3,
              "name": "ERC721",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 985,
              "src": "137:6:0"
            },
            "id": 4,
            "nodeType": "InheritanceSpecifier",
            "src": "137:6:0"
          }
        ],
        "contractDependencies": [
          985,
          1101,
          1146,
          1465,
          1692,
          1704
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 134,
        "linearizedBaseContracts": [
          134,
          985,
          1146,
          1101,
          1692,
          1704,
          1465
        ],
        "name": "Ethermon",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "Ethermon.Monster",
            "id": 9,
            "members": [
              {
                "constant": false,
                "id": 6,
                "mutability": "mutable",
                "name": "name",
                "nodeType": "VariableDeclaration",
                "scope": 9,
                "src": "176:11:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 5,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "176:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 8,
                "mutability": "mutable",
                "name": "level",
                "nodeType": "VariableDeclaration",
                "scope": 9,
                "src": "197:10:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 7,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "197:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Monster",
            "nodeType": "StructDefinition",
            "scope": 134,
            "src": "151:63:0",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "c0576b73",
            "id": 13,
            "mutability": "mutable",
            "name": "monsters",
            "nodeType": "VariableDeclaration",
            "scope": 134,
            "src": "220:25:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_struct$_Monster_$9_storage_$dyn_storage",
              "typeString": "struct Ethermon.Monster[]"
            },
            "typeName": {
              "baseType": {
                "id": 11,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 10,
                  "name": "Monster",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 9,
                  "src": "220:7:0"
                },
                "referencedDeclaration": 9,
                "src": "220:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Monster_$9_storage_ptr",
                  "typeString": "struct Ethermon.Monster"
                }
              },
              "id": 12,
              "nodeType": "ArrayTypeName",
              "src": "220:9:0",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_struct$_Monster_$9_storage_$dyn_storage_ptr",
                "typeString": "struct Ethermon.Monster[]"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "f6b12f28",
            "id": 15,
            "mutability": "mutable",
            "name": "gameOwner",
            "nodeType": "VariableDeclaration",
            "scope": 134,
            "src": "251:24:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 14,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "251:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 27,
              "nodeType": "Block",
              "src": "323:39:0",
              "statements": [
                {
                  "expression": {
                    "id": 25,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 22,
                      "name": "gameOwner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15,
                      "src": "333:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 23,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "345:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 24,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "345:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "333:22:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 26,
                  "nodeType": "ExpressionStatement",
                  "src": "333:22:0"
                }
              ]
            },
            "id": 28,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "45746865726d6f6e",
                    "id": 18,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "303:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_3bbdce89e462c9c70b544a894d772dbd8d8bae5bda54f23ed94de6d74d2ed7b0",
                      "typeString": "literal_string \"Ethermon\""
                    },
                    "value": "Ethermon"
                  },
                  {
                    "hexValue": "454d4f4e",
                    "id": 19,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "315:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_1f7951826fe381f352dcc587a508e3bfcd97ffd76bdf8c3a5c1a894102ff258e",
                      "typeString": "literal_string \"EMON\""
                    },
                    "value": "EMON"
                  }
                ],
                "id": 20,
                "modifierName": {
                  "id": 17,
                  "name": "ERC721",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 985,
                  "src": "296:6:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "296:26:0"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 16,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "293:2:0"
            },
            "returnParameters": {
              "id": 21,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "323:0:0"
            },
            "scope": 134,
            "src": "282:80:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 43,
              "nodeType": "Block",
              "src": "406:108:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 38,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 34,
                              "name": "_monsterId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30,
                              "src": "432:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 33,
                            "name": "ownerOf",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 313,
                            "src": "424:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                              "typeString": "function (uint256) view returns (address)"
                            }
                          },
                          "id": 35,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "424:19:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 36,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "447:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 37,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "447:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "424:33:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d757374206265206f776e6572206f66206d6f6e7374657220746f20626174746c65",
                        "id": 39,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "459:36:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_398e17316f7b20c18dc53a11b49708f2af08d4b0513a78bea553c9399b5b3363",
                          "typeString": "literal_string \"Must be owner of monster to battle\""
                        },
                        "value": "Must be owner of monster to battle"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_398e17316f7b20c18dc53a11b49708f2af08d4b0513a78bea553c9399b5b3363",
                          "typeString": "literal_string \"Must be owner of monster to battle\""
                        }
                      ],
                      "id": 32,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "416:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 40,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "416:80:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 41,
                  "nodeType": "ExpressionStatement",
                  "src": "416:80:0"
                },
                {
                  "id": 42,
                  "nodeType": "PlaceholderStatement",
                  "src": "506:1:0"
                }
              ]
            },
            "id": 44,
            "name": "onlyOwnerOf",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 31,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 30,
                  "mutability": "mutable",
                  "name": "_monsterId",
                  "nodeType": "VariableDeclaration",
                  "scope": 44,
                  "src": "389:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 29,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "389:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "388:17:0"
            },
            "src": "368:146:0",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 97,
              "nodeType": "Block",
              "src": "591:351:0",
              "statements": [
                {
                  "assignments": [
                    53
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 53,
                      "mutability": "mutable",
                      "name": "attacker",
                      "nodeType": "VariableDeclaration",
                      "scope": 97,
                      "src": "601:24:0",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Monster_$9_storage_ptr",
                        "typeString": "struct Ethermon.Monster"
                      },
                      "typeName": {
                        "id": 52,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 51,
                          "name": "Monster",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 9,
                          "src": "601:7:0"
                        },
                        "referencedDeclaration": 9,
                        "src": "601:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Monster_$9_storage_ptr",
                          "typeString": "struct Ethermon.Monster"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 57,
                  "initialValue": {
                    "baseExpression": {
                      "id": 54,
                      "name": "monsters",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13,
                      "src": "628:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Monster_$9_storage_$dyn_storage",
                        "typeString": "struct Ethermon.Monster storage ref[] storage ref"
                      }
                    },
                    "id": 56,
                    "indexExpression": {
                      "id": 55,
                      "name": "_attackingMonster",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46,
                      "src": "637:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "628:27:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Monster_$9_storage",
                      "typeString": "struct Ethermon.Monster storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "601:54:0"
                },
                {
                  "assignments": [
                    60
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 60,
                      "mutability": "mutable",
                      "name": "defender",
                      "nodeType": "VariableDeclaration",
                      "scope": 97,
                      "src": "665:24:0",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Monster_$9_storage_ptr",
                        "typeString": "struct Ethermon.Monster"
                      },
                      "typeName": {
                        "id": 59,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 58,
                          "name": "Monster",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 9,
                          "src": "665:7:0"
                        },
                        "referencedDeclaration": 9,
                        "src": "665:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Monster_$9_storage_ptr",
                          "typeString": "struct Ethermon.Monster"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 64,
                  "initialValue": {
                    "baseExpression": {
                      "id": 61,
                      "name": "monsters",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13,
                      "src": "692:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Monster_$9_storage_$dyn_storage",
                        "typeString": "struct Ethermon.Monster storage ref[] storage ref"
                      }
                    },
                    "id": 63,
                    "indexExpression": {
                      "id": 62,
                      "name": "_defendingMonster",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 48,
                      "src": "701:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "692:27:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Monster_$9_storage",
                      "typeString": "struct Ethermon.Monster storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "665:54:0"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 69,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 65,
                        "name": "attacker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53,
                        "src": "734:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Monster_$9_storage_ptr",
                          "typeString": "struct Ethermon.Monster storage pointer"
                        }
                      },
                      "id": 66,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "level",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8,
                      "src": "734:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">=",
                    "rightExpression": {
                      "expression": {
                        "id": 67,
                        "name": "defender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60,
                        "src": "752:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Monster_$9_storage_ptr",
                          "typeString": "struct Ethermon.Monster storage pointer"
                        }
                      },
                      "id": 68,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "level",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8,
                      "src": "752:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "734:32:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 95,
                    "nodeType": "Block",
                    "src": "859:77:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 87,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 83,
                              "name": "attacker",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 53,
                              "src": "873:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Monster_$9_storage_ptr",
                                "typeString": "struct Ethermon.Monster storage pointer"
                              }
                            },
                            "id": 85,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "level",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 8,
                            "src": "873:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "hexValue": "31",
                            "id": 86,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "891:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "873:19:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 88,
                        "nodeType": "ExpressionStatement",
                        "src": "873:19:0"
                      },
                      {
                        "expression": {
                          "id": 93,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 89,
                              "name": "attacker",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 53,
                              "src": "906:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Monster_$9_storage_ptr",
                                "typeString": "struct Ethermon.Monster storage pointer"
                              }
                            },
                            "id": 91,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "level",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 8,
                            "src": "906:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "hexValue": "32",
                            "id": 92,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "924:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            },
                            "value": "2"
                          },
                          "src": "906:19:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 94,
                        "nodeType": "ExpressionStatement",
                        "src": "906:19:0"
                      }
                    ]
                  },
                  "id": 96,
                  "nodeType": "IfStatement",
                  "src": "730:206:0",
                  "trueBody": {
                    "id": 82,
                    "nodeType": "Block",
                    "src": "768:77:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 74,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 70,
                              "name": "attacker",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 53,
                              "src": "782:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Monster_$9_storage_ptr",
                                "typeString": "struct Ethermon.Monster storage pointer"
                              }
                            },
                            "id": 72,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "level",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 8,
                            "src": "782:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "hexValue": "32",
                            "id": 73,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "800:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            },
                            "value": "2"
                          },
                          "src": "782:19:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 75,
                        "nodeType": "ExpressionStatement",
                        "src": "782:19:0"
                      },
                      {
                        "expression": {
                          "id": 80,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 76,
                              "name": "defender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 60,
                              "src": "815:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Monster_$9_storage_ptr",
                                "typeString": "struct Ethermon.Monster storage pointer"
                              }
                            },
                            "id": 78,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "level",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 8,
                            "src": "815:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "hexValue": "31",
                            "id": 79,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "833:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "815:19:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 81,
                        "nodeType": "ExpressionStatement",
                        "src": "815:19:0"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "2a0c5221",
            "id": 98,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "battle",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 49,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 46,
                  "mutability": "mutable",
                  "name": "_attackingMonster",
                  "nodeType": "VariableDeclaration",
                  "scope": 98,
                  "src": "536:22:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 45,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "536:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 48,
                  "mutability": "mutable",
                  "name": "_defendingMonster",
                  "nodeType": "VariableDeclaration",
                  "scope": 98,
                  "src": "560:22:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 47,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "560:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "535:48:0"
            },
            "returnParameters": {
              "id": 50,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "591:0:0"
            },
            "scope": 134,
            "src": "520:422:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 132,
              "nodeType": "Block",
              "src": "1015:196:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 109,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 106,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1033:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 107,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1033:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 108,
                          "name": "gameOwner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15,
                          "src": "1047:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1033:23:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e6c792067616d65206f776e65722063616e20637265617465206e6577206d6f6e7374657273",
                        "id": 110,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1058:41:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_36c714259474746d1b277d8d5b28b0ee1f424eed791bf4abf829869ee35f42d4",
                          "typeString": "literal_string \"Only game owner can create new monsters\""
                        },
                        "value": "Only game owner can create new monsters"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_36c714259474746d1b277d8d5b28b0ee1f424eed791bf4abf829869ee35f42d4",
                          "typeString": "literal_string \"Only game owner can create new monsters\""
                        }
                      ],
                      "id": 105,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1025:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 111,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1025:75:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 112,
                  "nodeType": "ExpressionStatement",
                  "src": "1025:75:0"
                },
                {
                  "assignments": [
                    114
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 114,
                      "mutability": "mutable",
                      "name": "id",
                      "nodeType": "VariableDeclaration",
                      "scope": 132,
                      "src": "1110:7:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 113,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1110:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 117,
                  "initialValue": {
                    "expression": {
                      "id": 115,
                      "name": "monsters",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13,
                      "src": "1120:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Monster_$9_storage_$dyn_storage",
                        "typeString": "struct Ethermon.Monster storage ref[] storage ref"
                      }
                    },
                    "id": 116,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "1120:15:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1110:25:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 122,
                            "name": "_name",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 100,
                            "src": "1167:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "hexValue": "31",
                            "id": 123,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1173:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            }
                          ],
                          "id": 121,
                          "name": "Monster",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9,
                          "src": "1159:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_Monster_$9_storage_ptr_$",
                            "typeString": "type(struct Ethermon.Monster storage pointer)"
                          }
                        },
                        "id": 124,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1159:16:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Monster_$9_memory_ptr",
                          "typeString": "struct Ethermon.Monster memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Monster_$9_memory_ptr",
                          "typeString": "struct Ethermon.Monster memory"
                        }
                      ],
                      "expression": {
                        "id": 118,
                        "name": "monsters",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13,
                        "src": "1145:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Monster_$9_storage_$dyn_storage",
                          "typeString": "struct Ethermon.Monster storage ref[] storage ref"
                        }
                      },
                      "id": 120,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "1145:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_Monster_$9_storage_$returns$__$",
                        "typeString": "function (struct Ethermon.Monster storage ref)"
                      }
                    },
                    "id": 125,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1145:31:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 126,
                  "nodeType": "ExpressionStatement",
                  "src": "1145:31:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 128,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 102,
                        "src": "1196:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 129,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 114,
                        "src": "1201:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 127,
                      "name": "_safeMint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        679,
                        708
                      ],
                      "referencedDeclaration": 679,
                      "src": "1186:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 130,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1186:18:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 131,
                  "nodeType": "ExpressionStatement",
                  "src": "1186:18:0"
                }
              ]
            },
            "functionSelector": "115dd1ab",
            "id": 133,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createNewMonster",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 103,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 100,
                  "mutability": "mutable",
                  "name": "_name",
                  "nodeType": "VariableDeclaration",
                  "scope": 133,
                  "src": "974:19:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 99,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "974:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 102,
                  "mutability": "mutable",
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "scope": 133,
                  "src": "995:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 101,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "995:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "973:34:0"
            },
            "returnParameters": {
              "id": 104,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1015:0:0"
            },
            "scope": 134,
            "src": "948:263:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 135,
        "src": "116:1097:0"
      }
    ],
    "src": "32:1181:0"
  },
  "legacyAST": {
    "absolutePath": "/Users/umutyerli/blockchain/ethermon/contracts/Ethermon.sol",
    "exportedSymbols": {
      "Address": [
        1442
      ],
      "Context": [
        1465
      ],
      "ERC165": [
        1692
      ],
      "ERC721": [
        985
      ],
      "Ethermon": [
        134
      ],
      "IERC165": [
        1704
      ],
      "IERC721": [
        1101
      ],
      "IERC721Metadata": [
        1146
      ],
      "IERC721Receiver": [
        1119
      ],
      "Strings": [
        1668
      ]
    },
    "id": 135,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:0"
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
        "file": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 135,
        "sourceUnit": 986,
        "src": "57:57:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 3,
              "name": "ERC721",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 985,
              "src": "137:6:0"
            },
            "id": 4,
            "nodeType": "InheritanceSpecifier",
            "src": "137:6:0"
          }
        ],
        "contractDependencies": [
          985,
          1101,
          1146,
          1465,
          1692,
          1704
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 134,
        "linearizedBaseContracts": [
          134,
          985,
          1146,
          1101,
          1692,
          1704,
          1465
        ],
        "name": "Ethermon",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "Ethermon.Monster",
            "id": 9,
            "members": [
              {
                "constant": false,
                "id": 6,
                "mutability": "mutable",
                "name": "name",
                "nodeType": "VariableDeclaration",
                "scope": 9,
                "src": "176:11:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 5,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "176:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 8,
                "mutability": "mutable",
                "name": "level",
                "nodeType": "VariableDeclaration",
                "scope": 9,
                "src": "197:10:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 7,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "197:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Monster",
            "nodeType": "StructDefinition",
            "scope": 134,
            "src": "151:63:0",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "c0576b73",
            "id": 13,
            "mutability": "mutable",
            "name": "monsters",
            "nodeType": "VariableDeclaration",
            "scope": 134,
            "src": "220:25:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_struct$_Monster_$9_storage_$dyn_storage",
              "typeString": "struct Ethermon.Monster[]"
            },
            "typeName": {
              "baseType": {
                "id": 11,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 10,
                  "name": "Monster",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 9,
                  "src": "220:7:0"
                },
                "referencedDeclaration": 9,
                "src": "220:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Monster_$9_storage_ptr",
                  "typeString": "struct Ethermon.Monster"
                }
              },
              "id": 12,
              "nodeType": "ArrayTypeName",
              "src": "220:9:0",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_struct$_Monster_$9_storage_$dyn_storage_ptr",
                "typeString": "struct Ethermon.Monster[]"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "f6b12f28",
            "id": 15,
            "mutability": "mutable",
            "name": "gameOwner",
            "nodeType": "VariableDeclaration",
            "scope": 134,
            "src": "251:24:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 14,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "251:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 27,
              "nodeType": "Block",
              "src": "323:39:0",
              "statements": [
                {
                  "expression": {
                    "id": 25,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 22,
                      "name": "gameOwner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15,
                      "src": "333:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 23,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "345:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 24,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "345:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "333:22:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 26,
                  "nodeType": "ExpressionStatement",
                  "src": "333:22:0"
                }
              ]
            },
            "id": 28,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "45746865726d6f6e",
                    "id": 18,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "303:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_3bbdce89e462c9c70b544a894d772dbd8d8bae5bda54f23ed94de6d74d2ed7b0",
                      "typeString": "literal_string \"Ethermon\""
                    },
                    "value": "Ethermon"
                  },
                  {
                    "hexValue": "454d4f4e",
                    "id": 19,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "315:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_1f7951826fe381f352dcc587a508e3bfcd97ffd76bdf8c3a5c1a894102ff258e",
                      "typeString": "literal_string \"EMON\""
                    },
                    "value": "EMON"
                  }
                ],
                "id": 20,
                "modifierName": {
                  "id": 17,
                  "name": "ERC721",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 985,
                  "src": "296:6:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "296:26:0"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 16,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "293:2:0"
            },
            "returnParameters": {
              "id": 21,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "323:0:0"
            },
            "scope": 134,
            "src": "282:80:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 43,
              "nodeType": "Block",
              "src": "406:108:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 38,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 34,
                              "name": "_monsterId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30,
                              "src": "432:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 33,
                            "name": "ownerOf",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 313,
                            "src": "424:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                              "typeString": "function (uint256) view returns (address)"
                            }
                          },
                          "id": 35,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "424:19:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 36,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "447:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 37,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "447:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "424:33:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d757374206265206f776e6572206f66206d6f6e7374657220746f20626174746c65",
                        "id": 39,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "459:36:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_398e17316f7b20c18dc53a11b49708f2af08d4b0513a78bea553c9399b5b3363",
                          "typeString": "literal_string \"Must be owner of monster to battle\""
                        },
                        "value": "Must be owner of monster to battle"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_398e17316f7b20c18dc53a11b49708f2af08d4b0513a78bea553c9399b5b3363",
                          "typeString": "literal_string \"Must be owner of monster to battle\""
                        }
                      ],
                      "id": 32,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "416:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 40,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "416:80:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 41,
                  "nodeType": "ExpressionStatement",
                  "src": "416:80:0"
                },
                {
                  "id": 42,
                  "nodeType": "PlaceholderStatement",
                  "src": "506:1:0"
                }
              ]
            },
            "id": 44,
            "name": "onlyOwnerOf",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 31,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 30,
                  "mutability": "mutable",
                  "name": "_monsterId",
                  "nodeType": "VariableDeclaration",
                  "scope": 44,
                  "src": "389:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 29,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "389:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "388:17:0"
            },
            "src": "368:146:0",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 97,
              "nodeType": "Block",
              "src": "591:351:0",
              "statements": [
                {
                  "assignments": [
                    53
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 53,
                      "mutability": "mutable",
                      "name": "attacker",
                      "nodeType": "VariableDeclaration",
                      "scope": 97,
                      "src": "601:24:0",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Monster_$9_storage_ptr",
                        "typeString": "struct Ethermon.Monster"
                      },
                      "typeName": {
                        "id": 52,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 51,
                          "name": "Monster",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 9,
                          "src": "601:7:0"
                        },
                        "referencedDeclaration": 9,
                        "src": "601:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Monster_$9_storage_ptr",
                          "typeString": "struct Ethermon.Monster"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 57,
                  "initialValue": {
                    "baseExpression": {
                      "id": 54,
                      "name": "monsters",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13,
                      "src": "628:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Monster_$9_storage_$dyn_storage",
                        "typeString": "struct Ethermon.Monster storage ref[] storage ref"
                      }
                    },
                    "id": 56,
                    "indexExpression": {
                      "id": 55,
                      "name": "_attackingMonster",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46,
                      "src": "637:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "628:27:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Monster_$9_storage",
                      "typeString": "struct Ethermon.Monster storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "601:54:0"
                },
                {
                  "assignments": [
                    60
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 60,
                      "mutability": "mutable",
                      "name": "defender",
                      "nodeType": "VariableDeclaration",
                      "scope": 97,
                      "src": "665:24:0",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Monster_$9_storage_ptr",
                        "typeString": "struct Ethermon.Monster"
                      },
                      "typeName": {
                        "id": 59,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 58,
                          "name": "Monster",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 9,
                          "src": "665:7:0"
                        },
                        "referencedDeclaration": 9,
                        "src": "665:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Monster_$9_storage_ptr",
                          "typeString": "struct Ethermon.Monster"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 64,
                  "initialValue": {
                    "baseExpression": {
                      "id": 61,
                      "name": "monsters",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13,
                      "src": "692:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Monster_$9_storage_$dyn_storage",
                        "typeString": "struct Ethermon.Monster storage ref[] storage ref"
                      }
                    },
                    "id": 63,
                    "indexExpression": {
                      "id": 62,
                      "name": "_defendingMonster",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 48,
                      "src": "701:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "692:27:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Monster_$9_storage",
                      "typeString": "struct Ethermon.Monster storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "665:54:0"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 69,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 65,
                        "name": "attacker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53,
                        "src": "734:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Monster_$9_storage_ptr",
                          "typeString": "struct Ethermon.Monster storage pointer"
                        }
                      },
                      "id": 66,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "level",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8,
                      "src": "734:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">=",
                    "rightExpression": {
                      "expression": {
                        "id": 67,
                        "name": "defender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60,
                        "src": "752:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Monster_$9_storage_ptr",
                          "typeString": "struct Ethermon.Monster storage pointer"
                        }
                      },
                      "id": 68,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "level",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8,
                      "src": "752:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "734:32:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 95,
                    "nodeType": "Block",
                    "src": "859:77:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 87,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 83,
                              "name": "attacker",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 53,
                              "src": "873:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Monster_$9_storage_ptr",
                                "typeString": "struct Ethermon.Monster storage pointer"
                              }
                            },
                            "id": 85,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "level",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 8,
                            "src": "873:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "hexValue": "31",
                            "id": 86,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "891:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "873:19:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 88,
                        "nodeType": "ExpressionStatement",
                        "src": "873:19:0"
                      },
                      {
                        "expression": {
                          "id": 93,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 89,
                              "name": "attacker",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 53,
                              "src": "906:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Monster_$9_storage_ptr",
                                "typeString": "struct Ethermon.Monster storage pointer"
                              }
                            },
                            "id": 91,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "level",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 8,
                            "src": "906:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "hexValue": "32",
                            "id": 92,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "924:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            },
                            "value": "2"
                          },
                          "src": "906:19:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 94,
                        "nodeType": "ExpressionStatement",
                        "src": "906:19:0"
                      }
                    ]
                  },
                  "id": 96,
                  "nodeType": "IfStatement",
                  "src": "730:206:0",
                  "trueBody": {
                    "id": 82,
                    "nodeType": "Block",
                    "src": "768:77:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 74,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 70,
                              "name": "attacker",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 53,
                              "src": "782:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Monster_$9_storage_ptr",
                                "typeString": "struct Ethermon.Monster storage pointer"
                              }
                            },
                            "id": 72,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "level",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 8,
                            "src": "782:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "hexValue": "32",
                            "id": 73,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "800:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            },
                            "value": "2"
                          },
                          "src": "782:19:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 75,
                        "nodeType": "ExpressionStatement",
                        "src": "782:19:0"
                      },
                      {
                        "expression": {
                          "id": 80,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 76,
                              "name": "defender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 60,
                              "src": "815:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Monster_$9_storage_ptr",
                                "typeString": "struct Ethermon.Monster storage pointer"
                              }
                            },
                            "id": 78,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "level",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 8,
                            "src": "815:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "hexValue": "31",
                            "id": 79,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "833:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "815:19:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 81,
                        "nodeType": "ExpressionStatement",
                        "src": "815:19:0"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "2a0c5221",
            "id": 98,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "battle",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 49,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 46,
                  "mutability": "mutable",
                  "name": "_attackingMonster",
                  "nodeType": "VariableDeclaration",
                  "scope": 98,
                  "src": "536:22:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 45,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "536:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 48,
                  "mutability": "mutable",
                  "name": "_defendingMonster",
                  "nodeType": "VariableDeclaration",
                  "scope": 98,
                  "src": "560:22:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 47,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "560:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "535:48:0"
            },
            "returnParameters": {
              "id": 50,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "591:0:0"
            },
            "scope": 134,
            "src": "520:422:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 132,
              "nodeType": "Block",
              "src": "1015:196:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 109,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 106,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1033:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 107,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1033:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 108,
                          "name": "gameOwner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15,
                          "src": "1047:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1033:23:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e6c792067616d65206f776e65722063616e20637265617465206e6577206d6f6e7374657273",
                        "id": 110,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1058:41:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_36c714259474746d1b277d8d5b28b0ee1f424eed791bf4abf829869ee35f42d4",
                          "typeString": "literal_string \"Only game owner can create new monsters\""
                        },
                        "value": "Only game owner can create new monsters"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_36c714259474746d1b277d8d5b28b0ee1f424eed791bf4abf829869ee35f42d4",
                          "typeString": "literal_string \"Only game owner can create new monsters\""
                        }
                      ],
                      "id": 105,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1025:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 111,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1025:75:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 112,
                  "nodeType": "ExpressionStatement",
                  "src": "1025:75:0"
                },
                {
                  "assignments": [
                    114
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 114,
                      "mutability": "mutable",
                      "name": "id",
                      "nodeType": "VariableDeclaration",
                      "scope": 132,
                      "src": "1110:7:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 113,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1110:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 117,
                  "initialValue": {
                    "expression": {
                      "id": 115,
                      "name": "monsters",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13,
                      "src": "1120:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Monster_$9_storage_$dyn_storage",
                        "typeString": "struct Ethermon.Monster storage ref[] storage ref"
                      }
                    },
                    "id": 116,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "1120:15:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1110:25:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 122,
                            "name": "_name",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 100,
                            "src": "1167:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "hexValue": "31",
                            "id": 123,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1173:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            }
                          ],
                          "id": 121,
                          "name": "Monster",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9,
                          "src": "1159:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_Monster_$9_storage_ptr_$",
                            "typeString": "type(struct Ethermon.Monster storage pointer)"
                          }
                        },
                        "id": 124,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1159:16:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Monster_$9_memory_ptr",
                          "typeString": "struct Ethermon.Monster memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Monster_$9_memory_ptr",
                          "typeString": "struct Ethermon.Monster memory"
                        }
                      ],
                      "expression": {
                        "id": 118,
                        "name": "monsters",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13,
                        "src": "1145:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Monster_$9_storage_$dyn_storage",
                          "typeString": "struct Ethermon.Monster storage ref[] storage ref"
                        }
                      },
                      "id": 120,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "1145:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_Monster_$9_storage_$returns$__$",
                        "typeString": "function (struct Ethermon.Monster storage ref)"
                      }
                    },
                    "id": 125,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1145:31:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 126,
                  "nodeType": "ExpressionStatement",
                  "src": "1145:31:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 128,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 102,
                        "src": "1196:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 129,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 114,
                        "src": "1201:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 127,
                      "name": "_safeMint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        679,
                        708
                      ],
                      "referencedDeclaration": 679,
                      "src": "1186:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 130,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1186:18:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 131,
                  "nodeType": "ExpressionStatement",
                  "src": "1186:18:0"
                }
              ]
            },
            "functionSelector": "115dd1ab",
            "id": 133,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createNewMonster",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 103,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 100,
                  "mutability": "mutable",
                  "name": "_name",
                  "nodeType": "VariableDeclaration",
                  "scope": 133,
                  "src": "974:19:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 99,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "974:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 102,
                  "mutability": "mutable",
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "scope": 133,
                  "src": "995:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 101,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "995:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "973:34:0"
            },
            "returnParameters": {
              "id": 104,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1015:0:0"
            },
            "scope": 134,
            "src": "948:263:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 135,
        "src": "116:1097:0"
      }
    ],
    "src": "32:1181:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.0+commit.c7dfd78e.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.2.3",
  "updatedAt": "2021-06-04T21:04:08.148Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "approve(address,uint256)": {
        "details": "See {IERC721-approve}."
      },
      "balanceOf(address)": {
        "details": "See {IERC721-balanceOf}."
      },
      "getApproved(uint256)": {
        "details": "See {IERC721-getApproved}."
      },
      "isApprovedForAll(address,address)": {
        "details": "See {IERC721-isApprovedForAll}."
      },
      "name()": {
        "details": "See {IERC721Metadata-name}."
      },
      "ownerOf(uint256)": {
        "details": "See {IERC721-ownerOf}."
      },
      "safeTransferFrom(address,address,uint256)": {
        "details": "See {IERC721-safeTransferFrom}."
      },
      "safeTransferFrom(address,address,uint256,bytes)": {
        "details": "See {IERC721-safeTransferFrom}."
      },
      "setApprovalForAll(address,bool)": {
        "details": "See {IERC721-setApprovalForAll}."
      },
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}."
      },
      "symbol()": {
        "details": "See {IERC721Metadata-symbol}."
      },
      "tokenURI(uint256)": {
        "details": "See {IERC721Metadata-tokenURI}."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC721-transferFrom}."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}